{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Microsoft Exchange Server Support Scripts This project contains scripts for supporting and troubleshooting Microsoft Exchange Server. Popular Scripts Script Docs Download HealthChecker.ps1 Docs Download SetupAssist.ps1 Docs Download SourceSideValidations.ps1 Docs Download Test-AMSI.ps1 Docs Download Test-CVE-2021-34470.ps1 Docs Download","title":"Microsoft Exchange Server Support Scripts"},{"location":"#microsoft-exchange-server-support-scripts","text":"This project contains scripts for supporting and troubleshooting Microsoft Exchange Server.","title":"Microsoft Exchange Server Support Scripts"},{"location":"#popular-scripts","text":"Script Docs Download HealthChecker.ps1 Docs Download SetupAssist.ps1 Docs Download SourceSideValidations.ps1 Docs Download Test-AMSI.ps1 Docs Download Test-CVE-2021-34470.ps1 Docs Download","title":"Popular Scripts"},{"location":"Emerging-Issues/","text":"Emerging Issues for Exchange On-Premises This page lists emerging issues for Exchange On-Premises deployments, possible root cause and solution/workaround to fix the issues. The page will be consistently updated with new issues found and reflect current status of the issues mentioned. November 2021 Security Update Following are the known issues after installing November 2021 Security Updates for Exchange On-Premises servers Issue Possible reason Workaround/Solution Hybrid OWA Redirect is broken after application of November SU for Exchange 2013/2016 and 2019. Users using Exchange 2016 and 2019 server will see error \":-( Something went wrong. We can't get that information right now. Please try again later. Exchange 2013 users will see error \"External component has thrown an exception.\" Some On-Premises environments, that are not using FBA, may also see cross-site OWA redirection fail with similar errors. After installing November SU, the OWA redirection URL for hybrid users is providing an encoded URL for &., causing the redirect to fail Use the workarounds provided in KB article 5008997 July 2021 Security Update/Cumulative Updates Following are the known issues after installing July 2021 Security Updates/Cumulative Updates for Exchange On-Premises servers Issue Possible reason Workaround/Solution OWA/ECP stops working after installing July Security Update with following error: ASSERT: HMACProvider.GetCertificates:protectionCertificates.Length<1 The issue occurs if OAuth certificate is missing or expired Follow steps on this article to re-publish the Oauth certificate. Do note it takes up to an hour for certificate to change place OWA/ECP stops working when accessed from load balanced URL, but works if directly accessed from the server URL The root cause for the issue is under investigation Follow steps in this article to fix the issue PrepareAD with Exchange 2016 CU21/Exchange 2019 CU10 error: Used domain controller dc1.contoso.com to read object CN=AdminSDHolder,CN=System,DC=Contoso,DC=COM. [ERROR] Object reference not set to an instance of an object. The issue is under investigation Follow steps in this article to fix the issue PrepareSchema in environments that have empty root AD domain July Security Update for Exchange 2013 have shipped schema changes and needs Exchange role installed for PrepareSchema, this makes it difficult for environments that have Exchange 2013 as the highest installed Exchange server and do not have an Exchange server installed in the same AD site as that of root AD domain. Option 1 Introduce a new server that meets system requirements for Exchange 2013 Management tools, in the root AD domain. Install just the Exchange 2013 Management Tools role on this server. Install the July security fix, perform Schema update. Option 2 PrepareSchema using Exchange 2016 21/Exchange 2019 CU10 media, as the CU\u2019s have the changes. However, once Exchange 2016/2019 media is used to perform schema update, you will need to continue using Exchange 2016/2019 media in the future as well. The Schema Version number for Exchange 2013 environment remains on 15312, even after installing SU and performing PrepareSchema This is expected behavior. The schema version is going to remain 15312 after installing Security Update and performing PrepareSchema After installing Exchange 2016 CU21/Exchange 2019 CU10, the values added to custom attributes using EAC are not retained. The scenario works fine in Exchange 2016 CU20/Exchange 2019 CU9 The issue is under investigation Workaround 1: Use EAC from Internet Explorer Workaround 2: Add the values using Exchange Management Shell","title":"Emerging Issues"},{"location":"Emerging-Issues/#emerging-issues-for-exchange-on-premises","text":"This page lists emerging issues for Exchange On-Premises deployments, possible root cause and solution/workaround to fix the issues. The page will be consistently updated with new issues found and reflect current status of the issues mentioned.","title":"Emerging Issues for Exchange On-Premises"},{"location":"Emerging-Issues/#november-2021-security-update","text":"Following are the known issues after installing November 2021 Security Updates for Exchange On-Premises servers Issue Possible reason Workaround/Solution Hybrid OWA Redirect is broken after application of November SU for Exchange 2013/2016 and 2019. Users using Exchange 2016 and 2019 server will see error \":-( Something went wrong. We can't get that information right now. Please try again later. Exchange 2013 users will see error \"External component has thrown an exception.\" Some On-Premises environments, that are not using FBA, may also see cross-site OWA redirection fail with similar errors. After installing November SU, the OWA redirection URL for hybrid users is providing an encoded URL for &., causing the redirect to fail Use the workarounds provided in KB article 5008997","title":"November 2021 Security Update"},{"location":"Emerging-Issues/#july-2021-security-updatecumulative-updates","text":"Following are the known issues after installing July 2021 Security Updates/Cumulative Updates for Exchange On-Premises servers Issue Possible reason Workaround/Solution OWA/ECP stops working after installing July Security Update with following error: ASSERT: HMACProvider.GetCertificates:protectionCertificates.Length<1 The issue occurs if OAuth certificate is missing or expired Follow steps on this article to re-publish the Oauth certificate. Do note it takes up to an hour for certificate to change place OWA/ECP stops working when accessed from load balanced URL, but works if directly accessed from the server URL The root cause for the issue is under investigation Follow steps in this article to fix the issue PrepareAD with Exchange 2016 CU21/Exchange 2019 CU10 error: Used domain controller dc1.contoso.com to read object CN=AdminSDHolder,CN=System,DC=Contoso,DC=COM. [ERROR] Object reference not set to an instance of an object. The issue is under investigation Follow steps in this article to fix the issue PrepareSchema in environments that have empty root AD domain July Security Update for Exchange 2013 have shipped schema changes and needs Exchange role installed for PrepareSchema, this makes it difficult for environments that have Exchange 2013 as the highest installed Exchange server and do not have an Exchange server installed in the same AD site as that of root AD domain. Option 1 Introduce a new server that meets system requirements for Exchange 2013 Management tools, in the root AD domain. Install just the Exchange 2013 Management Tools role on this server. Install the July security fix, perform Schema update. Option 2 PrepareSchema using Exchange 2016 21/Exchange 2019 CU10 media, as the CU\u2019s have the changes. However, once Exchange 2016/2019 media is used to perform schema update, you will need to continue using Exchange 2016/2019 media in the future as well. The Schema Version number for Exchange 2013 environment remains on 15312, even after installing SU and performing PrepareSchema This is expected behavior. The schema version is going to remain 15312 after installing Security Update and performing PrepareSchema After installing Exchange 2016 CU21/Exchange 2019 CU10, the values added to custom attributes using EAC are not retained. The scenario works fine in Exchange 2016 CU20/Exchange 2019 CU9 The issue is under investigation Workaround 1: Use EAC from Internet Explorer Workaround 2: Add the values using Exchange Management Shell","title":"July 2021 Security Update/Cumulative Updates"},{"location":"Admin/Clear-MailboxPermission/","text":"Clear-MailboxPermission Download the latest release: Clear-MailboxPermission.ps1 Attempting to Add-MailboxPermission or Remove-MailboxPermission sometimes fails with the following message: The ACL for object is not in canonical order (Deny/Allow/Inherited) and will be ignored. This indicates that the ACEs that make up the ACL do not follow canonical ordering, which generally means denies before allows, and explicit before inherited. When the mailbox security descriptor is in this state, the cmdlets can no longer modify it. This script can be used to return it to a working state. The script does this by clearing all permissions and resetting it to the default permissions that a brand new mailbox would have. Common Usage The easiest way to use the script is to pipe the affected mailboxes to it: Get-Mailbox joe@contoso.com | .\\Clear-MailboxPermission.ps1 Note the script also supports -WhatIf and -Confirm. It will prompt for confirmation by default.","title":"Clear-MailboxPermission"},{"location":"Admin/Clear-MailboxPermission/#clear-mailboxpermission","text":"Download the latest release: Clear-MailboxPermission.ps1 Attempting to Add-MailboxPermission or Remove-MailboxPermission sometimes fails with the following message: The ACL for object is not in canonical order (Deny/Allow/Inherited) and will be ignored. This indicates that the ACEs that make up the ACL do not follow canonical ordering, which generally means denies before allows, and explicit before inherited. When the mailbox security descriptor is in this state, the cmdlets can no longer modify it. This script can be used to return it to a working state. The script does this by clearing all permissions and resetting it to the default permissions that a brand new mailbox would have.","title":"Clear-MailboxPermission"},{"location":"Admin/Clear-MailboxPermission/#common-usage","text":"The easiest way to use the script is to pipe the affected mailboxes to it: Get-Mailbox joe@contoso.com | .\\Clear-MailboxPermission.ps1 Note the script also supports -WhatIf and -Confirm. It will prompt for confirmation by default.","title":"Common Usage"},{"location":"Admin/Get-SimpleAuditLogReport/","text":"Get-SimpleAuditLogReport Download the latest release: Get-SimpleAuditLogReport.ps1 Exchange admin audit logs are not readily human readable. All of the data needed to understand what Cmdlet has been run is in the data but it is not very easy to read. Get-SimpleAuditLogReport will take the results of an audit log search and provide a significantly more human readable version of the data. It will parse the audit log and attempt to reconstruct the actual Cmdlet that was run. Common Usage $Search = Search-AdminAuditLog $search | C:\\Scripts\\Get-SimpleAuditLogReport.ps1 -agree How to use Gather admin audit log results using Search-AdminAuditLog . Pipe the results into the Get-SimpleAuditLogReport script. Open the CSV file created in the same directory with the script.","title":"Get-SimpleAuditLogReport"},{"location":"Admin/Get-SimpleAuditLogReport/#get-simpleauditlogreport","text":"Download the latest release: Get-SimpleAuditLogReport.ps1 Exchange admin audit logs are not readily human readable. All of the data needed to understand what Cmdlet has been run is in the data but it is not very easy to read. Get-SimpleAuditLogReport will take the results of an audit log search and provide a significantly more human readable version of the data. It will parse the audit log and attempt to reconstruct the actual Cmdlet that was run.","title":"Get-SimpleAuditLogReport"},{"location":"Admin/Get-SimpleAuditLogReport/#common-usage","text":"$Search = Search-AdminAuditLog $search | C:\\Scripts\\Get-SimpleAuditLogReport.ps1 -agree","title":"Common Usage"},{"location":"Admin/Get-SimpleAuditLogReport/#how-to-use","text":"Gather admin audit log results using Search-AdminAuditLog . Pipe the results into the Get-SimpleAuditLogReport script. Open the CSV file created in the same directory with the script.","title":"How to use"},{"location":"Admin/Test-AMSI/","text":"Test-AMSI The Windows Antimalware Scan Interface (AMSI) is a versatile standard that allows applications and services to integrate with any antimalware product present on a machine. Seeing that Exchange administrators might not be familiar with AMSI, we wanted to provide a script that would make life a bit easier to test, enable, disable, or Check your AMSI Providers. Download Download the latest release: Test-AMSI.ps1 Common Usage After you download the script, you will need to run it within an elevated Exchange Management Shell Session If you want to test to see if AMSI integration is working you can run: .\\Test-AMSI.ps1 -ExchangeServerFQDN mail.contoso.com If you want to see what AMSI Providers are installed on the local machine you can run: .\\Test-AMSI.ps1 -CheckAMSIProviders If you want to enable AMSI on the Exchange Server, you can run: .\\Test-AMSI.ps1 -EnableAMSI If you want to disable AMSI on the Exchange Server, you can run: .\\Test-AMSI.ps1 -DisableAMSI If you want to restart the Internet Information Services (IIS) you can run: .\\Test-AMSI.ps1 -RestartIIS If you need to test and ignoring the certificate check you can run: .\\Test-AMSI.ps1 -IgnoreSSL More to come We will be adding the ability to review the web.config to make sure that the HttpRequestFilteringModule line is present We will be working on better output for PowerShell 7","title":"Test-AMSI"},{"location":"Admin/Test-AMSI/#test-amsi","text":"The Windows Antimalware Scan Interface (AMSI) is a versatile standard that allows applications and services to integrate with any antimalware product present on a machine. Seeing that Exchange administrators might not be familiar with AMSI, we wanted to provide a script that would make life a bit easier to test, enable, disable, or Check your AMSI Providers.","title":"Test-AMSI"},{"location":"Admin/Test-AMSI/#download","text":"Download the latest release: Test-AMSI.ps1","title":"Download"},{"location":"Admin/Test-AMSI/#common-usage","text":"After you download the script, you will need to run it within an elevated Exchange Management Shell Session If you want to test to see if AMSI integration is working you can run: .\\Test-AMSI.ps1 -ExchangeServerFQDN mail.contoso.com If you want to see what AMSI Providers are installed on the local machine you can run: .\\Test-AMSI.ps1 -CheckAMSIProviders If you want to enable AMSI on the Exchange Server, you can run: .\\Test-AMSI.ps1 -EnableAMSI If you want to disable AMSI on the Exchange Server, you can run: .\\Test-AMSI.ps1 -DisableAMSI If you want to restart the Internet Information Services (IIS) you can run: .\\Test-AMSI.ps1 -RestartIIS If you need to test and ignoring the certificate check you can run: .\\Test-AMSI.ps1 -IgnoreSSL","title":"Common Usage"},{"location":"Admin/Test-AMSI/#more-to-come","text":"We will be adding the ability to review the web.config to make sure that the HttpRequestFilteringModule line is present We will be working on better output for PowerShell 7","title":"More to come"},{"location":"Databases/VSSTester/","text":"VSSTester Download the latest release: VSSTester.ps1 The script is self-explanatory. You can test run diskshadow on a single Exchange database to ensure backups are working properly (i.e. all the Microsoft components). If the issue only happens with a 3rd-party backup solution, you can utilize operation mode 2 to enable just the logging while you execute a backup with the 3rd-party solution. More information https://techcommunity.microsoft.com/t5/exchange-team-blog/troubleshoot-your-exchange-2010-database-backup-functionality/ba-p/594367 https://techcommunity.microsoft.com/t5/exchange-team-blog/vsstester-script-updated-8211-troubleshoot-exchange-2013-and/ba-p/610976 COM+ Security Here are the steps to verify that the local Administrators group is allowed to the COM+ Security on the computer. The script will detect if this is a possibility if we can not see the Exchange Writers and we have the registry settings set that determine this is a possibility. Run \"dcomcnfg\" from the run box or command prompt on the problem machine Expand Component Services then Computers Right Click on My Computer and select Properties Select the COM Security tab and select Edit Default... under Access Permissions If the local Administrators group is not here for Allow for Local and Remote Access, click Add... to add the local Administrators group to the Default Security permissions Change the locations to the computer name Type in \"Administrators\" and select Check Names. Making sure the computer account comes up Add Local Access and Remote Access for Allow Click Okay Click Apply and Okay Restart the Computer","title":"VSSTester"},{"location":"Databases/VSSTester/#vsstester","text":"Download the latest release: VSSTester.ps1 The script is self-explanatory. You can test run diskshadow on a single Exchange database to ensure backups are working properly (i.e. all the Microsoft components). If the issue only happens with a 3rd-party backup solution, you can utilize operation mode 2 to enable just the logging while you execute a backup with the 3rd-party solution.","title":"VSSTester"},{"location":"Databases/VSSTester/#more-information","text":"https://techcommunity.microsoft.com/t5/exchange-team-blog/troubleshoot-your-exchange-2010-database-backup-functionality/ba-p/594367 https://techcommunity.microsoft.com/t5/exchange-team-blog/vsstester-script-updated-8211-troubleshoot-exchange-2013-and/ba-p/610976","title":"More information"},{"location":"Databases/VSSTester/#com-security","text":"Here are the steps to verify that the local Administrators group is allowed to the COM+ Security on the computer. The script will detect if this is a possibility if we can not see the Exchange Writers and we have the registry settings set that determine this is a possibility. Run \"dcomcnfg\" from the run box or command prompt on the problem machine Expand Component Services then Computers Right Click on My Computer and select Properties Select the COM Security tab and select Edit Default... under Access Permissions If the local Administrators group is not here for Allow for Local and Remote Access, click Add... to add the local Administrators group to the Default Security permissions Change the locations to the computer name Type in \"Administrators\" and select Check Names. Making sure the computer account comes up Add Local Access and Remote Access for Allow Click Okay Click Apply and Okay Restart the Computer","title":"COM+ Security"},{"location":"Diagnostics/ExTRA/","text":"ExTRA Download the latest release: ExTRA.ps1 The goal of this script is to replace the ExTRA UI that was included with older versions of Exchange. The script can be run on any machine where a modern browser (Edge/Chrome/Firefox) is set as the default browser. It does not need to be run on an Exchange server. It will not work if Internet Explorer is the default browser. Usage Generally, you will want to run this script on a user workstation and use it to generate the EnabledTraces.config file. Then, that file can be copied to the Exchange server, and a logman command can be used to start and stop the ExTRA trace. The script can be run directly on a server if desired, but remember that IE cannot be the default browser in that case. To use, download the latest release. Then run the script with no parameters: .\\ExTRA.ps1 The default browser will launch with a tag selection interface. Once the desired tags are selected, click Save and go back to the PowerShell window. You should see some output indicating that the EnabledTraces.config file was saved in the folder. That EnabledTraces.config should be placed at the root of C:\\ on the server being traced. The output also provides example logman syntax for creating, starting, and stopping the trace.","title":"ExTRA"},{"location":"Diagnostics/ExTRA/#extra","text":"Download the latest release: ExTRA.ps1 The goal of this script is to replace the ExTRA UI that was included with older versions of Exchange. The script can be run on any machine where a modern browser (Edge/Chrome/Firefox) is set as the default browser. It does not need to be run on an Exchange server. It will not work if Internet Explorer is the default browser.","title":"ExTRA"},{"location":"Diagnostics/ExTRA/#usage","text":"Generally, you will want to run this script on a user workstation and use it to generate the EnabledTraces.config file. Then, that file can be copied to the Exchange server, and a logman command can be used to start and stop the ExTRA trace. The script can be run directly on a server if desired, but remember that IE cannot be the default browser in that case. To use, download the latest release. Then run the script with no parameters: .\\ExTRA.ps1 The default browser will launch with a tag selection interface. Once the desired tags are selected, click Save and go back to the PowerShell window. You should see some output indicating that the EnabledTraces.config file was saved in the folder. That EnabledTraces.config should be placed at the root of C:\\ on the server being traced. The output also provides example logman syntax for creating, starting, and stopping the trace.","title":"Usage"},{"location":"Diagnostics/ExchangeLogCollector/","text":"Exchange Log Collector Download the latest release: ExchangeLogCollector.ps1 This script is intended to collect the Exchange default logging data from the server in a consistent manner to make it easier to troubleshoot an issue when large amounts of data is needed to be collected. You can specify what logs you want to collect by the switches that are available, then the script has logic built in to determine how to collect the data. How to Run The script must be run as Administrator in PowerShell session on an Exchange Server or Tools box. Supported to run and collected logs against Exchange 2013 and greater. The intent of the script is to collect logs only that you need from X servers quickly without needing to have to manually collect it yourself and label zip them all up for you. If you don't know what logs to collect, it is recommended to use -AllPossibleLogs . This script no longer supports collecting logs from Exchange 2010. However, the last release of v2 should still work just fine. You can download that here . The script is able to collect from the large set of servers while using the Invoke-Command. Prior to executing the main script, we check to make sure the server is up and that we are able to use Invoke-Command against the server. If Invoke-Command works remotely, then we will allow you to attempt to collect the data. You can still utilize the script to collect locally as it used to be able to, if the target OS doesn't allow this. Prior to collecting the data, we check to make sure that there is at least 10GB of free space at the location of where we are trying to save the data of the target server. The script will continue to keep track of all the logs and data that is being copied over and will stop if we have less than 10GB of free space. You are able to use a config file to load up all the parameters you wish to choose and the servers you wish to run the script against. Just create a file called ExchangeLogCollector.ps1.json and place at the same location as the script. Then provide the switches you would like to use in the file like so: { \"Servers\": [ \"ADT-E16A\", \"ADT-E16B\", \"ADT-E16C\" ], \"FilePath\": \"C:\\\\MS_Logs\", \"IISLogs\": true, \"AcceptEULA\": true, \"AppSysLogsToXml\": false, \"ScriptDebug\": true } NOTE: It is import that you use \\\\ for the file path otherwise the settings will fail to load. Examples: This cmdlet will collect all default logs of the local Exchange Server and store them in the default location of \"C:\\MS_Logs_Collection\" .\\ExchangeLogCollector.ps1 -AllPossibleLogs This cmdlet will collect all relevant data regarding database failovers from server EXCH1 and EXCH2 and store them at Z:\\Data\\Logs. Note: at the end of the collection, the script will copy over the data to the local host execution server to make data collection even easier. .\\ExchangeLogCollector.ps1 -DatabaseFailoverIssue -Servers EXCH1,EXCH2 -FilePath Z:\\Data\\Logs This cmdlet will collect all relevant data regarding IIS Logs (within the last 3 days by default) and all RPC type logs from the servers EXCH1 and EXCH2 and store them at the default location of \"C:\\MS_Logs_Collection\" .\\ExchangeLogCollector.ps1 -Servers EXCH1,EXCH2 -IISLogs -RPCLogs Parameters Parameter Description FilePath The Location of where you would like the data to be copied over to. This location must be the same and accessible on all servers if you use the Servers parameter. Default value: C:\\MS_Logs_Collection Servers An array of servers that you would like to collect data from. ADDriverLogs Enable to collect AD Driver Logs. Location: V15\\Logging\\ADDriver AppSysLogs Collects the Windows Event Application, System, and MSExchange Management Logs. Default value $true AppSysLogsToXml Collects the Windows Event Application and System and saves them out to XML. The date range only is from the time the script run and the value set on DaysWorth . Default value: $true AutoDLogs Enable to collect AutoDiscover Logs. Location: V15\\Logging\\Autodiscover and V15\\Logging\\HttpProxy\\Autodiscover CollectFailoverMetrics Enable to run the CollectOverMetrics.ps1 script against the DAG. Only able to be run on an Exchange tools box or an Exchange Server. DAGInformation Enable to collect the DAG Information from all different DAGs that are in the list of servers. DailyPerformanceLogs Enable to collect Daily Performance Logs. Default Location: V15\\Logging\\Diagnostics\\DailyPerformanceLogs DefaultTransportLogging Enables the following switches and their logs to be collected. FrontEndConnectivityLogs , FrontEndProtocolLogs , HubConnectivityLogs , MailboxConnectivityLogs , MailboxDeliveryThrottlingLogs , MessageTrackingLogs , QueueInformation , ReceiveConnectors , SendConnectors , and TransportConfig EASLogs Enable to collect Exchange Active Sync Logging. Location: V15\\Logging\\HttpProxy\\Eas ECPLogs Enable to collect ECP Logs. Location: V15\\Logging\\ECP and V15\\Logging\\HttpProxy\\Ecp EWSLogs Enable to collect EWS Logs. Location: V15\\Logging\\HttpProxy\\Ews and V15\\Logging\\Ews ExchangeServerInformation Enable to collect Exchange Information like Get-ExchangeServer, Get-MailboxServer, etc... This is also collected when -ServerInformation is also enabled. Exmon Enable to collect exmon data from the server. Experfwiz Enable to collect Experfwiz data if found. FrontEndConnectivityLogs Enable to collect the connectivity logging on the FE. Location: (Get-FrontendTransportService $server).ConnectivityLogPath FrontEndProtocolLogs Enable to collect the protocol logging on the FE. Location: (Get-FrontendTransportService $server).ReceiveProtocolLogPath and (Get-FrontendTransportService $server).SendProtocolLogPath GetVdirs Enable to collect the Virtual Directories of the environment. HighAvailabilityLogs Enable to collect High Availability Logs. Windows Event Logs like: Microsoft-Exchange-HighAvailability , Microsoft-Exchange-MailboxDatabaseFailureItems , and Microsoft-Windows-FailoverClustering HubConnectivityLogs Enable to collect the Hub connectivity logging. Location: (Get-TransportService $server).ConnectivityLogPath HubProtocolLogs Enable to collect the protocol logging. Location: (Get-TransportService $server).ReceiveProtocolLogPath and (Get-TransportService $server).SendProtocolLogPath IISLogs Enable to collect IIS Logs and HTTPErr Logs from the Exchange Server. Default Location: C:\\inetpub\\logs\\LogFiles\\W3SVC1 , C:\\inetpub\\logs\\LogFiles\\W3SVC1 , and C:\\Windows\\System32\\LogFiles\\HTTPERR . Only able to collect on DaysWorth. ImapLogs Enable to collect IMAP logging. Location: (Get-ImapSettings -Server $server).LogFileLocation MailboxConnectivityLogs Enable to collect the connectivity logging on the mailbox server. Location: (Get-MailboxTransportService $server).ConnectivityLogPath MailboxDeliveryThrottlingLogs Enable to collect the mailbox delivery throttling logs on the server. Location: (Get-MailboxTransportService $server).MailboxDeliveryThrottlingLogPath MailboxProtocolLogs Enable to collect protocol logging on the mailbox server. Location: (Get-MailboxTransportService $server).ReceiveProtocolLogPath and (Get-MailboxTransportService $server).SendProtocolLogPath ManagedAvailabilityLogs Enable to collect the Managed Availability Logs. Location: V15\\Logging\\Monitoring and Windows Event logs like Microsoft-Exchange-ManagedAvailability MapiLogs Enable to collect MAPI Logs. Location: V15\\Logging\\MAPI Client Access , V15\\Logging\\MapiHttp\\Mailbox , and V15\\Logging\\HttpProxy\\Mapi MessageTrackingLogs Enable to collect the Message Tracking Logs. Location: (Get-TransportService $server).MessageTrackingLogPath MitigationService Enable to collect the Mitigation Service logs. Location: V15\\Logging\\MitigationService OABLogs Enable to collect OAB Logs. Location: V15\\Logging\\HttpProxy\\OAB , V15\\Logging\\OABGeneratorLog , V15\\Logging\\OABGeneratorSimpleLog , and V15\\Logging\\MAPI AddressBook Service OrganizationConfig Enable to collect the Organization Configuration from the environment. OWALogs Enable to collect OWA Logs. Location: V15\\Logging\\OWA , Logging\\HttpProxy\\OwaCalendar , and V15\\Logging\\HttpProxy\\Owa PopLogs Enable to collect POP logging. Location: (Get-PopSettings -Server $server).LogFileLocation PowerShellLogs Enable to collect the PowerShell Logs. Location: V15\\Logging\\HttpProxy\\PowerShell QueueInformation Enable to collect the historical queue information. Location: (Get-TransportService $server).QueueLogPath ReceiveConnectors Enable to collect the Receive Connector information from the server. RPCLogs Enable to collect RPC Logs. Location: V15\\Logging\\RPC Client Access , V15\\Logging\\HttpProxy\\RpcHttp , and V15\\Logging\\RpcHttp SearchLogs Enable to collect Search Logs. Location: V15\\Bin\\Search\\Ceres\\Diagnostics\\Logs , V15\\Bin\\Search\\Ceres\\Diagnostics\\ETLTraces , V15\\Logging\\Search . On 2019 only we also include V15\\Logging\\BigFunnelMetricsCollectionAssistant , V15\\Logging\\BigFunnelQueryParityAssistant , and V15\\Logging\\BigFunnelRetryFeederTimeBasedAssistant SendConnectors Enable to collect the send connector information from the environment. ServerInformation Enable to collect general server information. TransportConfig Enable to collect the Transport Configuration files from the Server and Get-TransportConfig from the org. Files: EdgeTransport.exe.config , MSExchangeFrontEndTransport.exe.config , MSExchangeDelivery.exe.config , and MSExchangeSubmission.exe.config WindowsSecurityLogs Enable to collect the Windows Security Logs. Default Location: 'C:\\Windows\\System32\\Winevt\\Logs\\Security.evtx' AcceptEULA Enable to accept the conditions of the script and not get prompted. AllPossibleLogs Enables the collection of all default logging collection on the Server. CollectAllLogsBasedOnDaysWorth Boolean to determine if you collect all the logs based off day's worth or all the logs in that directory. Default value $true DatabaseFailoverIssue Enables the following switches and their logs to be collected. DAGInformation , DailyPerformanceLogs , ExchangeServerInformation , Experfwiz , HighAvailabilityLogs , ManagedAvailabilityLogs , and ServerInformation . DaysWorth The number of days to go back from today for log collection. Default value: 3 DisableConfigImport Enable to not import the ExchangeLogCollector.ps1.json file if it exists. ExmonLogmanName A list of names that we want to collect for Exmon data. The default name is Exmon_Trace . ExperfwizLogmanName A list of names that we want to collect performance data logs from. The default names are Exchange_Perfwiz and ExPerfwiz . (For both styles of Experfwiz) ConnectivityLogs Enables the following switches and their logs to be collected: FrontEndConnectivityLogs , HubConnectivityLogs , and MailboxConnectivityLogs OutlookConnectivityIssues Enables the following switches and their logs to be collected: AutoDLogs , DailyPerformanceLogs , EWSLogs , Experfwiz , IISLogs , MAPILogs , RPCLogs , and ServerInformation PerformanceIssues Enables the following switches and their logs to be collected: DailyPerformanceLogs , Experfwiz , and ManagedAvailabilityLogs PerformanceMailflowIssues Enables the following switches and their logs to be collected: DailyPerformanceLogs , Experfwiz , MessageTrackingLogs , QueueInformation , and TransportConfig ProtocolLogs Enables the following switches and their logs to be collected: FrontEndProtocolLogs , HubProtocolLogs , and MailboxProtocolLogs ScriptDebug Enable to display all the verbose lines in the script. SkipEndCopyOver If the Servers parameter is used, by default we will attempt to collect all the data back over to the local server after all the data was collected on each server.","title":"ExchangeLogCollector"},{"location":"Diagnostics/ExchangeLogCollector/#exchange-log-collector","text":"Download the latest release: ExchangeLogCollector.ps1 This script is intended to collect the Exchange default logging data from the server in a consistent manner to make it easier to troubleshoot an issue when large amounts of data is needed to be collected. You can specify what logs you want to collect by the switches that are available, then the script has logic built in to determine how to collect the data.","title":"Exchange Log Collector"},{"location":"Diagnostics/ExchangeLogCollector/#how-to-run","text":"The script must be run as Administrator in PowerShell session on an Exchange Server or Tools box. Supported to run and collected logs against Exchange 2013 and greater. The intent of the script is to collect logs only that you need from X servers quickly without needing to have to manually collect it yourself and label zip them all up for you. If you don't know what logs to collect, it is recommended to use -AllPossibleLogs . This script no longer supports collecting logs from Exchange 2010. However, the last release of v2 should still work just fine. You can download that here . The script is able to collect from the large set of servers while using the Invoke-Command. Prior to executing the main script, we check to make sure the server is up and that we are able to use Invoke-Command against the server. If Invoke-Command works remotely, then we will allow you to attempt to collect the data. You can still utilize the script to collect locally as it used to be able to, if the target OS doesn't allow this. Prior to collecting the data, we check to make sure that there is at least 10GB of free space at the location of where we are trying to save the data of the target server. The script will continue to keep track of all the logs and data that is being copied over and will stop if we have less than 10GB of free space. You are able to use a config file to load up all the parameters you wish to choose and the servers you wish to run the script against. Just create a file called ExchangeLogCollector.ps1.json and place at the same location as the script. Then provide the switches you would like to use in the file like so: { \"Servers\": [ \"ADT-E16A\", \"ADT-E16B\", \"ADT-E16C\" ], \"FilePath\": \"C:\\\\MS_Logs\", \"IISLogs\": true, \"AcceptEULA\": true, \"AppSysLogsToXml\": false, \"ScriptDebug\": true } NOTE: It is import that you use \\\\ for the file path otherwise the settings will fail to load.","title":"How to Run"},{"location":"Diagnostics/ExchangeLogCollector/#examples","text":"This cmdlet will collect all default logs of the local Exchange Server and store them in the default location of \"C:\\MS_Logs_Collection\" .\\ExchangeLogCollector.ps1 -AllPossibleLogs This cmdlet will collect all relevant data regarding database failovers from server EXCH1 and EXCH2 and store them at Z:\\Data\\Logs. Note: at the end of the collection, the script will copy over the data to the local host execution server to make data collection even easier. .\\ExchangeLogCollector.ps1 -DatabaseFailoverIssue -Servers EXCH1,EXCH2 -FilePath Z:\\Data\\Logs This cmdlet will collect all relevant data regarding IIS Logs (within the last 3 days by default) and all RPC type logs from the servers EXCH1 and EXCH2 and store them at the default location of \"C:\\MS_Logs_Collection\" .\\ExchangeLogCollector.ps1 -Servers EXCH1,EXCH2 -IISLogs -RPCLogs","title":"Examples:"},{"location":"Diagnostics/ExchangeLogCollector/#parameters","text":"Parameter Description FilePath The Location of where you would like the data to be copied over to. This location must be the same and accessible on all servers if you use the Servers parameter. Default value: C:\\MS_Logs_Collection Servers An array of servers that you would like to collect data from. ADDriverLogs Enable to collect AD Driver Logs. Location: V15\\Logging\\ADDriver AppSysLogs Collects the Windows Event Application, System, and MSExchange Management Logs. Default value $true AppSysLogsToXml Collects the Windows Event Application and System and saves them out to XML. The date range only is from the time the script run and the value set on DaysWorth . Default value: $true AutoDLogs Enable to collect AutoDiscover Logs. Location: V15\\Logging\\Autodiscover and V15\\Logging\\HttpProxy\\Autodiscover CollectFailoverMetrics Enable to run the CollectOverMetrics.ps1 script against the DAG. Only able to be run on an Exchange tools box or an Exchange Server. DAGInformation Enable to collect the DAG Information from all different DAGs that are in the list of servers. DailyPerformanceLogs Enable to collect Daily Performance Logs. Default Location: V15\\Logging\\Diagnostics\\DailyPerformanceLogs DefaultTransportLogging Enables the following switches and their logs to be collected. FrontEndConnectivityLogs , FrontEndProtocolLogs , HubConnectivityLogs , MailboxConnectivityLogs , MailboxDeliveryThrottlingLogs , MessageTrackingLogs , QueueInformation , ReceiveConnectors , SendConnectors , and TransportConfig EASLogs Enable to collect Exchange Active Sync Logging. Location: V15\\Logging\\HttpProxy\\Eas ECPLogs Enable to collect ECP Logs. Location: V15\\Logging\\ECP and V15\\Logging\\HttpProxy\\Ecp EWSLogs Enable to collect EWS Logs. Location: V15\\Logging\\HttpProxy\\Ews and V15\\Logging\\Ews ExchangeServerInformation Enable to collect Exchange Information like Get-ExchangeServer, Get-MailboxServer, etc... This is also collected when -ServerInformation is also enabled. Exmon Enable to collect exmon data from the server. Experfwiz Enable to collect Experfwiz data if found. FrontEndConnectivityLogs Enable to collect the connectivity logging on the FE. Location: (Get-FrontendTransportService $server).ConnectivityLogPath FrontEndProtocolLogs Enable to collect the protocol logging on the FE. Location: (Get-FrontendTransportService $server).ReceiveProtocolLogPath and (Get-FrontendTransportService $server).SendProtocolLogPath GetVdirs Enable to collect the Virtual Directories of the environment. HighAvailabilityLogs Enable to collect High Availability Logs. Windows Event Logs like: Microsoft-Exchange-HighAvailability , Microsoft-Exchange-MailboxDatabaseFailureItems , and Microsoft-Windows-FailoverClustering HubConnectivityLogs Enable to collect the Hub connectivity logging. Location: (Get-TransportService $server).ConnectivityLogPath HubProtocolLogs Enable to collect the protocol logging. Location: (Get-TransportService $server).ReceiveProtocolLogPath and (Get-TransportService $server).SendProtocolLogPath IISLogs Enable to collect IIS Logs and HTTPErr Logs from the Exchange Server. Default Location: C:\\inetpub\\logs\\LogFiles\\W3SVC1 , C:\\inetpub\\logs\\LogFiles\\W3SVC1 , and C:\\Windows\\System32\\LogFiles\\HTTPERR . Only able to collect on DaysWorth. ImapLogs Enable to collect IMAP logging. Location: (Get-ImapSettings -Server $server).LogFileLocation MailboxConnectivityLogs Enable to collect the connectivity logging on the mailbox server. Location: (Get-MailboxTransportService $server).ConnectivityLogPath MailboxDeliveryThrottlingLogs Enable to collect the mailbox delivery throttling logs on the server. Location: (Get-MailboxTransportService $server).MailboxDeliveryThrottlingLogPath MailboxProtocolLogs Enable to collect protocol logging on the mailbox server. Location: (Get-MailboxTransportService $server).ReceiveProtocolLogPath and (Get-MailboxTransportService $server).SendProtocolLogPath ManagedAvailabilityLogs Enable to collect the Managed Availability Logs. Location: V15\\Logging\\Monitoring and Windows Event logs like Microsoft-Exchange-ManagedAvailability MapiLogs Enable to collect MAPI Logs. Location: V15\\Logging\\MAPI Client Access , V15\\Logging\\MapiHttp\\Mailbox , and V15\\Logging\\HttpProxy\\Mapi MessageTrackingLogs Enable to collect the Message Tracking Logs. Location: (Get-TransportService $server).MessageTrackingLogPath MitigationService Enable to collect the Mitigation Service logs. Location: V15\\Logging\\MitigationService OABLogs Enable to collect OAB Logs. Location: V15\\Logging\\HttpProxy\\OAB , V15\\Logging\\OABGeneratorLog , V15\\Logging\\OABGeneratorSimpleLog , and V15\\Logging\\MAPI AddressBook Service OrganizationConfig Enable to collect the Organization Configuration from the environment. OWALogs Enable to collect OWA Logs. Location: V15\\Logging\\OWA , Logging\\HttpProxy\\OwaCalendar , and V15\\Logging\\HttpProxy\\Owa PopLogs Enable to collect POP logging. Location: (Get-PopSettings -Server $server).LogFileLocation PowerShellLogs Enable to collect the PowerShell Logs. Location: V15\\Logging\\HttpProxy\\PowerShell QueueInformation Enable to collect the historical queue information. Location: (Get-TransportService $server).QueueLogPath ReceiveConnectors Enable to collect the Receive Connector information from the server. RPCLogs Enable to collect RPC Logs. Location: V15\\Logging\\RPC Client Access , V15\\Logging\\HttpProxy\\RpcHttp , and V15\\Logging\\RpcHttp SearchLogs Enable to collect Search Logs. Location: V15\\Bin\\Search\\Ceres\\Diagnostics\\Logs , V15\\Bin\\Search\\Ceres\\Diagnostics\\ETLTraces , V15\\Logging\\Search . On 2019 only we also include V15\\Logging\\BigFunnelMetricsCollectionAssistant , V15\\Logging\\BigFunnelQueryParityAssistant , and V15\\Logging\\BigFunnelRetryFeederTimeBasedAssistant SendConnectors Enable to collect the send connector information from the environment. ServerInformation Enable to collect general server information. TransportConfig Enable to collect the Transport Configuration files from the Server and Get-TransportConfig from the org. Files: EdgeTransport.exe.config , MSExchangeFrontEndTransport.exe.config , MSExchangeDelivery.exe.config , and MSExchangeSubmission.exe.config WindowsSecurityLogs Enable to collect the Windows Security Logs. Default Location: 'C:\\Windows\\System32\\Winevt\\Logs\\Security.evtx' AcceptEULA Enable to accept the conditions of the script and not get prompted. AllPossibleLogs Enables the collection of all default logging collection on the Server. CollectAllLogsBasedOnDaysWorth Boolean to determine if you collect all the logs based off day's worth or all the logs in that directory. Default value $true DatabaseFailoverIssue Enables the following switches and their logs to be collected. DAGInformation , DailyPerformanceLogs , ExchangeServerInformation , Experfwiz , HighAvailabilityLogs , ManagedAvailabilityLogs , and ServerInformation . DaysWorth The number of days to go back from today for log collection. Default value: 3 DisableConfigImport Enable to not import the ExchangeLogCollector.ps1.json file if it exists. ExmonLogmanName A list of names that we want to collect for Exmon data. The default name is Exmon_Trace . ExperfwizLogmanName A list of names that we want to collect performance data logs from. The default names are Exchange_Perfwiz and ExPerfwiz . (For both styles of Experfwiz) ConnectivityLogs Enables the following switches and their logs to be collected: FrontEndConnectivityLogs , HubConnectivityLogs , and MailboxConnectivityLogs OutlookConnectivityIssues Enables the following switches and their logs to be collected: AutoDLogs , DailyPerformanceLogs , EWSLogs , Experfwiz , IISLogs , MAPILogs , RPCLogs , and ServerInformation PerformanceIssues Enables the following switches and their logs to be collected: DailyPerformanceLogs , Experfwiz , and ManagedAvailabilityLogs PerformanceMailflowIssues Enables the following switches and their logs to be collected: DailyPerformanceLogs , Experfwiz , MessageTrackingLogs , QueueInformation , and TransportConfig ProtocolLogs Enables the following switches and their logs to be collected: FrontEndProtocolLogs , HubProtocolLogs , and MailboxProtocolLogs ScriptDebug Enable to display all the verbose lines in the script. SkipEndCopyOver If the Servers parameter is used, by default we will attempt to collect all the data back over to the local server after all the data was collected on each server.","title":"Parameters"},{"location":"Diagnostics/Test-ExchAVExclusions/","text":"Test-ExchAVExclusions Download the latest release: Test-ExchAVExclusions.ps1 Assists with testing Exchange Servers to determine if AV Exclusions have been properly set according to our documentation. AV Exclusions Usage Writes an EICAR test file to all paths specified in our AV Exclusions documentation. If the file is removed then the path is not properly excluded from AV Scanning. IF the file is not removed then it should be properly excluded. Once the files are created it will wait 60 seconds for AV to \"see\" and remove the file. ... .\\Test-ExchAVExclusions.ps1 ... Parameters Parameter Description Recurse Places an EICAR file in all subfolders as well as the root. OpenLog Opens the script log file. Outputs Log file: $env:LOCALAPPDATA\\ExchAvExclusions.log List of Folders Scanned by AV: $env:LOCALAPPDATA\\BadFolders.txt","title":"Test-ExchAVExclusions"},{"location":"Diagnostics/Test-ExchAVExclusions/#test-exchavexclusions","text":"Download the latest release: Test-ExchAVExclusions.ps1 Assists with testing Exchange Servers to determine if AV Exclusions have been properly set according to our documentation. AV Exclusions","title":"Test-ExchAVExclusions"},{"location":"Diagnostics/Test-ExchAVExclusions/#usage","text":"Writes an EICAR test file to all paths specified in our AV Exclusions documentation. If the file is removed then the path is not properly excluded from AV Scanning. IF the file is not removed then it should be properly excluded. Once the files are created it will wait 60 seconds for AV to \"see\" and remove the file. ... .\\Test-ExchAVExclusions.ps1 ...","title":"Usage"},{"location":"Diagnostics/Test-ExchAVExclusions/#parameters","text":"Parameter Description Recurse Places an EICAR file in all subfolders as well as the root. OpenLog Opens the script log file.","title":"Parameters"},{"location":"Diagnostics/Test-ExchAVExclusions/#outputs","text":"Log file: $env:LOCALAPPDATA\\ExchAvExclusions.log List of Folders Scanned by AV: $env:LOCALAPPDATA\\BadFolders.txt","title":"Outputs"},{"location":"Diagnostics/HealthChecker/","text":"HealthChecker Download the latest release: HealthChecker.ps1 The Exchange Server Health Checker script helps detect common configuration issues that are known to cause performance issues and other long running issues that are caused by a simple configuration change within an Exchange Environment. It also helps collect useful information of your server to help speed up the process of common information gathering of your server. Requirements Supported Exchange Server Versions: The script can be used to validate the configuration of the following Exchange Server versions: - Exchange Server 2013 - Exchange Server 2016 - Exchange Server 2019 You can use the latest v2 release to validate the configuration of Exchange Server 2010 . Please note that this version is no longer maintained and some checks are not available. You can download the latest v2 release here Required Permissions: Please make sure that the account used is a member of the Local Administrator group. This should be fulfilled on Exchange servers by being a member of the Organization Management group. However, if the group membership was adjusted or in case the script is executed on a non-Exchange system like a management server, you need to add your account to the Local Administrator group. You also need to be a member of the following groups: Organization Management Domain Admins (only necessary for the DCCoreRatio parameter) How To Run This script must be run as Administrator in Exchange Management Shell on an Exchange Server. You can provide no parameters and the script will just run against the local server and provide the detail output of the configuration of the server. Examples: This cmdlet with run Health Checker Script by default and run against the local server. .\\HealthChecker.ps1 This cmdlet will run the Health Checker Script against the specified server. .\\HealthChecker.ps1 -Server EXCH1 This cmdlet will build the HTML report for all the XML files located in the same location as the Health Checker Script. .\\HealthChecker.ps1 -BuildHtmlServersReport This cmdlet will build the HTML report for all the XML files located in the directory specified in the XMLDirectoryPath Parameter. .\\HealthChecker.ps1 -BuildHtmlServersReport -XMLDirectoryPath C:\\Location This cmdlet will run the Health Checker Load Balancing Report for all the Exchange 2013/2016 CAS (Front End connections only) in the Organization. .\\HealthChecker.ps1 -LoadBalancingReport This cmdlet will run the Health Checker Load Balancing Report for these Servers EXCH1, EXCH2, and EXCH3 .\\HealthChecker.ps1 -LoadBalancingReport -CasServerList EXCH1,EXCH2,EXCH3 This cmdlet will run the Health Checker Load Balancing Report for the Exchange 2013/2016 CAS (Front End connections only) in the site SiteA. .\\HealthChecker.ps1 -LoadBalancingReport -SiteName SiteA This cmdlet will run the Health Checker Mailbox Report against the Server EXCH1 .\\HealthChecker.ps1 -MailboxReport -Server EXCH1 This cmdlet will run the Health Checker against all your Exchange Servers, then run the HTML report and open it. Get-ExchangeServer | ?{$_.AdminDisplayVersion -Match \"^Version 15\"} | %{.\\HealthChecker.ps1 -Server $_.Name}; .\\HealthChecker.ps1 -BuildHtmlServersReport; .\\ExchangeAllServersReport.html Parameters Parameter Description Server The server that you would like to run the Health Checker Script against. Parameter not valid with -BuildHTMLServersReport or LoadBalancingReport. Default is the localhost. OutputFilePath The output location for the log files that the script produces. Default is the current directory. MailboxReport Produces the Mailbox Report for the server provided. LoadBalancingReport Runs the Load Balancing Report for the Script CasServerList Used in combination with the LoadBalancingReport switch for letting the script to know which servers to run against. SiteName Used in combination with the LoadBalancingReport switch for letting the script to know which servers to run against in the site. XMLDirectoryPath Used in combination with BuildHtmlServersReport switch for the location of the HealthChecker XML files for servers which you want to be included in the report. Default location is the current directory. BuildHtmlServersReport Switch to enable the script to build the HTML report for all the servers XML results in the XMLDirectoryPath location. HtmlReportFile Name of the HTML output file from the BuildHtmlServersReport. Default is ExchangeAllServersReport.html DCCoreRatio Gathers the Exchange to DC/GC Core ratio and displays the results in the current site that the script is running in. AnalyzeDataOnly Switch to analyze the existing HealthChecker XML files. The results are displayed on the screen and an HTML report is generated. SkipVersionCheck No version check is performed when this switch is used. SaveDebugLog The debug log is kept even if the script is executed successfully. ScriptUpdateOnly Switch to check for the latest version of the script and perform an auto update if a newer version was found. Can be run on any machine with internet connectivity. No elevated permissions or EMS are required.","title":"HealthChecker"},{"location":"Diagnostics/HealthChecker/#healthchecker","text":"Download the latest release: HealthChecker.ps1 The Exchange Server Health Checker script helps detect common configuration issues that are known to cause performance issues and other long running issues that are caused by a simple configuration change within an Exchange Environment. It also helps collect useful information of your server to help speed up the process of common information gathering of your server.","title":"HealthChecker"},{"location":"Diagnostics/HealthChecker/#requirements","text":"","title":"Requirements"},{"location":"Diagnostics/HealthChecker/#supported-exchange-server-versions","text":"The script can be used to validate the configuration of the following Exchange Server versions: - Exchange Server 2013 - Exchange Server 2016 - Exchange Server 2019 You can use the latest v2 release to validate the configuration of Exchange Server 2010 . Please note that this version is no longer maintained and some checks are not available. You can download the latest v2 release here","title":"Supported Exchange Server Versions:"},{"location":"Diagnostics/HealthChecker/#required-permissions","text":"Please make sure that the account used is a member of the Local Administrator group. This should be fulfilled on Exchange servers by being a member of the Organization Management group. However, if the group membership was adjusted or in case the script is executed on a non-Exchange system like a management server, you need to add your account to the Local Administrator group. You also need to be a member of the following groups: Organization Management Domain Admins (only necessary for the DCCoreRatio parameter)","title":"Required Permissions:"},{"location":"Diagnostics/HealthChecker/#how-to-run","text":"This script must be run as Administrator in Exchange Management Shell on an Exchange Server. You can provide no parameters and the script will just run against the local server and provide the detail output of the configuration of the server.","title":"How To Run"},{"location":"Diagnostics/HealthChecker/#examples","text":"This cmdlet with run Health Checker Script by default and run against the local server. .\\HealthChecker.ps1 This cmdlet will run the Health Checker Script against the specified server. .\\HealthChecker.ps1 -Server EXCH1 This cmdlet will build the HTML report for all the XML files located in the same location as the Health Checker Script. .\\HealthChecker.ps1 -BuildHtmlServersReport This cmdlet will build the HTML report for all the XML files located in the directory specified in the XMLDirectoryPath Parameter. .\\HealthChecker.ps1 -BuildHtmlServersReport -XMLDirectoryPath C:\\Location This cmdlet will run the Health Checker Load Balancing Report for all the Exchange 2013/2016 CAS (Front End connections only) in the Organization. .\\HealthChecker.ps1 -LoadBalancingReport This cmdlet will run the Health Checker Load Balancing Report for these Servers EXCH1, EXCH2, and EXCH3 .\\HealthChecker.ps1 -LoadBalancingReport -CasServerList EXCH1,EXCH2,EXCH3 This cmdlet will run the Health Checker Load Balancing Report for the Exchange 2013/2016 CAS (Front End connections only) in the site SiteA. .\\HealthChecker.ps1 -LoadBalancingReport -SiteName SiteA This cmdlet will run the Health Checker Mailbox Report against the Server EXCH1 .\\HealthChecker.ps1 -MailboxReport -Server EXCH1 This cmdlet will run the Health Checker against all your Exchange Servers, then run the HTML report and open it. Get-ExchangeServer | ?{$_.AdminDisplayVersion -Match \"^Version 15\"} | %{.\\HealthChecker.ps1 -Server $_.Name}; .\\HealthChecker.ps1 -BuildHtmlServersReport; .\\ExchangeAllServersReport.html","title":"Examples:"},{"location":"Diagnostics/HealthChecker/#parameters","text":"Parameter Description Server The server that you would like to run the Health Checker Script against. Parameter not valid with -BuildHTMLServersReport or LoadBalancingReport. Default is the localhost. OutputFilePath The output location for the log files that the script produces. Default is the current directory. MailboxReport Produces the Mailbox Report for the server provided. LoadBalancingReport Runs the Load Balancing Report for the Script CasServerList Used in combination with the LoadBalancingReport switch for letting the script to know which servers to run against. SiteName Used in combination with the LoadBalancingReport switch for letting the script to know which servers to run against in the site. XMLDirectoryPath Used in combination with BuildHtmlServersReport switch for the location of the HealthChecker XML files for servers which you want to be included in the report. Default location is the current directory. BuildHtmlServersReport Switch to enable the script to build the HTML report for all the servers XML results in the XMLDirectoryPath location. HtmlReportFile Name of the HTML output file from the BuildHtmlServersReport. Default is ExchangeAllServersReport.html DCCoreRatio Gathers the Exchange to DC/GC Core ratio and displays the results in the current site that the script is running in. AnalyzeDataOnly Switch to analyze the existing HealthChecker XML files. The results are displayed on the screen and an HTML report is generated. SkipVersionCheck No version check is performed when this switch is used. SaveDebugLog The debug log is kept even if the script is executed successfully. ScriptUpdateOnly Switch to check for the latest version of the script and perform an auto update if a newer version was found. Can be run on any machine with internet connectivity. No elevated permissions or EMS are required.","title":"Parameters"},{"location":"Diagnostics/HealthChecker/AMSIIntegration/","text":"AMSI Check The Windows Antimalware Scan Interface (AMSI) is a versatile standard that allows applications and services to integrate with any antimalware product present on a machine. AMSI is vendor agnostic and designed to allow for the most common malware scanning and protection techniques provided by today's products to be integrated into applications. It only scans the HTTP protocol, and is not meant to be a replacement to existing server-level or message hygiene protections. AMSI integration is available on the following Operating System / Exchange Server version combinations: - Windows Server 2016, or higher - Exchange Server 2016 CU21, or higher - Exchange Server 2019 CU10, or higher - AMSI is not available on Edge Transport Servers If you use Microsoft Defender, AV engine version at or higher than 1.1.18300.4 is also required. Alternatively, a compatible AMSI capable third-party AV provider. This check verifies if an override exists which disables the AMSI integration with Exchange Server. It does that, by running the following query: Get-SettingOverride | Where-Object { ($_.ComponentName -eq \"Cafe\") -and ($_.SectionName -eq \"HttpRequestFiltering\") } Included in HTML Report? Yes Additional resources: Released: June 2021 Quarterly Exchange Updates More about AMSI integration with Exchange Server","title":"AMSICheck"},{"location":"Diagnostics/HealthChecker/AMSIIntegration/#amsi-check","text":"The Windows Antimalware Scan Interface (AMSI) is a versatile standard that allows applications and services to integrate with any antimalware product present on a machine. AMSI is vendor agnostic and designed to allow for the most common malware scanning and protection techniques provided by today's products to be integrated into applications. It only scans the HTTP protocol, and is not meant to be a replacement to existing server-level or message hygiene protections. AMSI integration is available on the following Operating System / Exchange Server version combinations: - Windows Server 2016, or higher - Exchange Server 2016 CU21, or higher - Exchange Server 2019 CU10, or higher - AMSI is not available on Edge Transport Servers If you use Microsoft Defender, AV engine version at or higher than 1.1.18300.4 is also required. Alternatively, a compatible AMSI capable third-party AV provider. This check verifies if an override exists which disables the AMSI integration with Exchange Server. It does that, by running the following query: Get-SettingOverride | Where-Object { ($_.ComponentName -eq \"Cafe\") -and ($_.SectionName -eq \"HttpRequestFiltering\") } Included in HTML Report? Yes Additional resources: Released: June 2021 Quarterly Exchange Updates More about AMSI integration with Exchange Server","title":"AMSI Check"},{"location":"Diagnostics/HealthChecker/CTSProcessorAffinityPercentageCheck/","text":"CTS Processor Affinity Percentage Check Description: We check if the CtsProcessorAffinityPercentage DWORD value unter HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\ExchangeServer\\V15\\Search\\SystemParameters exists and is set to any other value than 0 . This setting can be used to limit CPU utilization of a process. This can cause an impact to the server's search performance. This should never be used as a long term solution! Included in HTML Report? Yes","title":"CTSProcessorAffinityCheck"},{"location":"Diagnostics/HealthChecker/CTSProcessorAffinityPercentageCheck/#cts-processor-affinity-percentage-check","text":"Description: We check if the CtsProcessorAffinityPercentage DWORD value unter HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\ExchangeServer\\V15\\Search\\SystemParameters exists and is set to any other value than 0 . This setting can be used to limit CPU utilization of a process. This can cause an impact to the server's search performance. This should never be used as a long term solution! Included in HTML Report? Yes","title":"CTS Processor Affinity Percentage Check"},{"location":"Diagnostics/HealthChecker/CertificateCheck/","text":"Certificate Check This check retrieves all certificates from the Exchange server by using the Get-ExchangeCertificate cmdlet. We display the following information: FriendlyName Thumbprint Lifetime in days Key size Signature algorithm Signature hash algorithm Bound to services Current Auth Certificate SAN Certificate Namespaces We also perform the following checks: Certificate lifetime check: We show a green output, if the certificate is valid for 60 or more days. We show a yellow warning, if the certificate lifetime is between 30 and 59 days. We show a red warning if the lifetime is < 30 days. Weak key size check: We show a red warning, if the key size is lower than 2048 bit. Weak hash algorithm check: We show a yellow warning if the hash algorithm used to sign a certificate is weak. Valid Auth certificate check: We check if the certificate which is set as current Auth certificate is available on the server. Included in HTML Report? Yes","title":"CertificateCheck"},{"location":"Diagnostics/HealthChecker/CertificateCheck/#certificate-check","text":"This check retrieves all certificates from the Exchange server by using the Get-ExchangeCertificate cmdlet. We display the following information: FriendlyName Thumbprint Lifetime in days Key size Signature algorithm Signature hash algorithm Bound to services Current Auth Certificate SAN Certificate Namespaces We also perform the following checks: Certificate lifetime check: We show a green output, if the certificate is valid for 60 or more days. We show a yellow warning, if the certificate lifetime is between 30 and 59 days. We show a red warning if the lifetime is < 30 days. Weak key size check: We show a red warning, if the key size is lower than 2048 bit. Weak hash algorithm check: We show a yellow warning if the hash algorithm used to sign a certificate is weak. Valid Auth certificate check: We check if the certificate which is set as current Auth certificate is available on the server. Included in HTML Report? Yes","title":"Certificate Check"},{"location":"Diagnostics/HealthChecker/CredentialGuardCheck/","text":"Credential Guard Check Description: In this check we validate, weather Credential Guard was activated or not. Credential Guard is not supported on an Exchange Server. This can cause a performance hit on the server. Included in HTML Report? Yes Additional resources: Manage Windows Defender Credential Guard","title":"CredentialGuardCheck"},{"location":"Diagnostics/HealthChecker/CredentialGuardCheck/#credential-guard-check","text":"Description: In this check we validate, weather Credential Guard was activated or not. Credential Guard is not supported on an Exchange Server. This can cause a performance hit on the server. Included in HTML Report? Yes Additional resources: Manage Windows Defender Credential Guard","title":"Credential Guard Check"},{"location":"Diagnostics/HealthChecker/DownloadDomainCheck/","text":"Download Domain Check Description: In this check we validate if the Download Domain feature was configured or not. This feature was introduced to address CVE-2021-1730 . If the feature is enabled, we validate if the URL configured to download attachments, is not set to the same as the internal or external Outlook Web App (OWA) url. CVE-2021-1730 will not be addressed if the url configured to be used by the Download Domain feature points to the same url(s) which is/are used by OWA. The Download Domain feature is available on Microsoft Exchange Server 2016 and Microsoft Exchange Server 2019. Included in HTML Report? Yes Additional resources: How to configure the Download Domain feature (see FAQ section)","title":"DownloadDomainCheck"},{"location":"Diagnostics/HealthChecker/DownloadDomainCheck/#download-domain-check","text":"Description: In this check we validate if the Download Domain feature was configured or not. This feature was introduced to address CVE-2021-1730 . If the feature is enabled, we validate if the URL configured to download attachments, is not set to the same as the internal or external Outlook Web App (OWA) url. CVE-2021-1730 will not be addressed if the url configured to be used by the Download Domain feature points to the same url(s) which is/are used by OWA. The Download Domain feature is available on Microsoft Exchange Server 2016 and Microsoft Exchange Server 2019. Included in HTML Report? Yes Additional resources: How to configure the Download Domain feature (see FAQ section)","title":"Download Domain Check"},{"location":"Diagnostics/HealthChecker/EEMSCheck/","text":"Exchange Emergency Mitigation Service Check Description: The Exchange Emergency Mitigation Server also known as EEMS or EM was introduced with the Exchange Server 2019 Cumulative Update 11 and Exchange Server 2016 Cumulative Update 22 . The Exchange Emergency Mitigation service helps to keep your Exchange Servers secure by applying mitigations to address any potential threats against your servers. It uses the cloud-based Office Config Service (OCS) to check for and download available mitigations and to send diagnostic data to Microsoft. The EM service runs as a Windows service on an Exchange Mailbox server. The EM service will be installed automatically on servers with the Mailbox role. The EM service will not be installed on Edge Transport servers. The use of the EM service is optional. If you do not want Microsoft to automatically apply mitigations to your Exchange servers, you can disable the feature. This check performs the following testings to highlight the configuration state of the EEMS: Configuration Check Shows if the EEMS is enabled or not on Organizational level Shows if the EEMS is enabled or not on Server level Windows Service Check MSExchangeMitigation Windows service startup type should be: Automatic MSExchangeMitigation Windows service status should be: Running Pattern Service Check We validate if we can reach the OCS which is used to serve the latest mitigations OCS Mitigation Service url: https://officeclient.microsoft.com/getexchangemitigations Mitigations Check Shows which mitigations are currently being applied Shows which mitigations are currently being blocked Diagnostic Data Check Shows if the service is configured to provide diagnostic data to Microsoft or not Included in HTML Report? Yes Additional resources: New security feature in September 2021 Cumulative Update for Exchange Server Released: September 2021 Quarterly Exchange Updates Addressing Your Feedback on the Exchange Emergency Mitigation Service Exchange Emergency Mitigation (EM) service","title":"EEMSCheck"},{"location":"Diagnostics/HealthChecker/EEMSCheck/#exchange-emergency-mitigation-service-check","text":"Description: The Exchange Emergency Mitigation Server also known as EEMS or EM was introduced with the Exchange Server 2019 Cumulative Update 11 and Exchange Server 2016 Cumulative Update 22 . The Exchange Emergency Mitigation service helps to keep your Exchange Servers secure by applying mitigations to address any potential threats against your servers. It uses the cloud-based Office Config Service (OCS) to check for and download available mitigations and to send diagnostic data to Microsoft. The EM service runs as a Windows service on an Exchange Mailbox server. The EM service will be installed automatically on servers with the Mailbox role. The EM service will not be installed on Edge Transport servers. The use of the EM service is optional. If you do not want Microsoft to automatically apply mitigations to your Exchange servers, you can disable the feature. This check performs the following testings to highlight the configuration state of the EEMS: Configuration Check Shows if the EEMS is enabled or not on Organizational level Shows if the EEMS is enabled or not on Server level Windows Service Check MSExchangeMitigation Windows service startup type should be: Automatic MSExchangeMitigation Windows service status should be: Running Pattern Service Check We validate if we can reach the OCS which is used to serve the latest mitigations OCS Mitigation Service url: https://officeclient.microsoft.com/getexchangemitigations Mitigations Check Shows which mitigations are currently being applied Shows which mitigations are currently being blocked Diagnostic Data Check Shows if the service is configured to provide diagnostic data to Microsoft or not Included in HTML Report? Yes Additional resources: New security feature in September 2021 Cumulative Update for Exchange Server Released: September 2021 Quarterly Exchange Updates Addressing Your Feedback on the Exchange Emergency Mitigation Service Exchange Emergency Mitigation (EM) service","title":"Exchange Emergency Mitigation Service Check"},{"location":"Diagnostics/HealthChecker/ExchangeServerMaintenanceCheck/","text":"Exchange Server Maintenance Check Description: We validate the Maintenance State for the Exchange server. We run the following checks: We query the server component state by running Get-ServerComponentState We query cluster node information by running Get-ClusterNode We then check for each component if Component.State is not Active If this is the case, we query the Component.LocalStates and Component.RemoteStates We validate if both states LocalStates & RemoteStates are the same We add the information, if LocalStates & RemoteStates are different We show a green information Server is not in Maintenance Mode if the server is not in maintenance mode. We display a yellow warning Exchange Server Maintenance if components in maintenance state are detected. We also show additional information about the Database Copy Maintenance and Cluster Node state. Included in HTML Report? Yes Additional resources: Determine the requestor that changed Server component state","title":"MaintenanceCheck"},{"location":"Diagnostics/HealthChecker/ExchangeServerMaintenanceCheck/#exchange-server-maintenance-check","text":"Description: We validate the Maintenance State for the Exchange server. We run the following checks: We query the server component state by running Get-ServerComponentState We query cluster node information by running Get-ClusterNode We then check for each component if Component.State is not Active If this is the case, we query the Component.LocalStates and Component.RemoteStates We validate if both states LocalStates & RemoteStates are the same We add the information, if LocalStates & RemoteStates are different We show a green information Server is not in Maintenance Mode if the server is not in maintenance mode. We display a yellow warning Exchange Server Maintenance if components in maintenance state are detected. We also show additional information about the Database Copy Maintenance and Cluster Node state. Included in HTML Report? Yes Additional resources: Determine the requestor that changed Server component state","title":"Exchange Server Maintenance Check"},{"location":"Diagnostics/HealthChecker/GeneralHardwareInformation/","text":"General Hardware Information Description: We show some general information about the Processor/Hardware of the Exchange server against which the script was executed. Hardware Type: VMWare AmazonEC2 HyperV Physical Unknown We additionally show the following information, if HardwareType is Physical or AmazonEC2 : - Manufacturer - Model - Processor Number of Processors: We show an note if ServerType is VMWare [1] We show an error if we have more than 2 Processors installed Number of Physical/Logical Cores: We show a warning if we have more than 24 Physical Cores and running Exchange 2013/2016 [2] We show a warning if we have more than 48 Physical Cores and running Exchange 2019 [2] Hyper-Threading: We show if Hyper-Threading is enabled or not. NUMA BIOS Check: We check to see if we can properly see all cores on the server. [3], [4] Max Processor Speed: We return the MaxMegacyclesPerCore . This is the max speed that we can get out of the cores. We also check if the processor is throttled which may be a result of a misconfigured Power Plan. Physical Memory: We validate if the amount of installed memory meets our specifications. [5] Included in HTML Report? Yes Additional resources: 1 - Does corespersocket Affect Performance? 2 - Commodity servers 3 - CUSTOMER ADVISORY c04650594 4 - Exchange performance:HP NUMA BIOS settings 5 - Exchange 2013 Sizing 5 - Hardware requirements for Exchange 2016 5 - Hardware requirements for Exchange 2019","title":"GeneralHardwareInformation"},{"location":"Diagnostics/HealthChecker/GeneralHardwareInformation/#general-hardware-information","text":"Description: We show some general information about the Processor/Hardware of the Exchange server against which the script was executed. Hardware Type: VMWare AmazonEC2 HyperV Physical Unknown We additionally show the following information, if HardwareType is Physical or AmazonEC2 : - Manufacturer - Model - Processor Number of Processors: We show an note if ServerType is VMWare [1] We show an error if we have more than 2 Processors installed Number of Physical/Logical Cores: We show a warning if we have more than 24 Physical Cores and running Exchange 2013/2016 [2] We show a warning if we have more than 48 Physical Cores and running Exchange 2019 [2] Hyper-Threading: We show if Hyper-Threading is enabled or not. NUMA BIOS Check: We check to see if we can properly see all cores on the server. [3], [4] Max Processor Speed: We return the MaxMegacyclesPerCore . This is the max speed that we can get out of the cores. We also check if the processor is throttled which may be a result of a misconfigured Power Plan. Physical Memory: We validate if the amount of installed memory meets our specifications. [5] Included in HTML Report? Yes Additional resources: 1 - Does corespersocket Affect Performance? 2 - Commodity servers 3 - CUSTOMER ADVISORY c04650594 4 - Exchange performance:HP NUMA BIOS settings 5 - Exchange 2013 Sizing 5 - Hardware requirements for Exchange 2016 5 - Hardware requirements for Exchange 2019","title":"General Hardware Information"},{"location":"Diagnostics/HealthChecker/HyperThreadingCheck/","text":"Hyper-Threading Check Description: We validate if Hyper-Threading is enabled or not. We do this by checking if LogicalCores is greater than PhysicalCores which means that Hyper-Threading is enabled. We show a red error and recommend turning off Hyper-Threading. Included in HTML Report? Yes Additional resources: Exchange 2013 Sizing and Configuration Recommendations - Processing","title":"HyperThreadingCheck"},{"location":"Diagnostics/HealthChecker/HyperThreadingCheck/#hyper-threading-check","text":"Description: We validate if Hyper-Threading is enabled or not. We do this by checking if LogicalCores is greater than PhysicalCores which means that Hyper-Threading is enabled. We show a red error and recommend turning off Hyper-Threading. Included in HTML Report? Yes Additional resources: Exchange 2013 Sizing and Configuration Recommendations - Processing","title":"Hyper-Threading Check"},{"location":"Diagnostics/HealthChecker/IPv6EnabledCheck/","text":"IPv6 Enabled Check Description: We check if IPv6 is enabled or not. If we determine that IPv6 has been disabled, we check to see if it's fully disabled as recommended. We determine if the IPv6 is fully disabled by checking to see if we have an IPv6 Address available on the NIC and that it matches what is found in the registry at SYSTEM\\CurrentControlSet\\Services\\Tcpip6\\Parameters\\DisabledComponents . If both places don't have IPv6 enabled/disabled properly a warning is thrown. This can cause communication issues if not properly disabled. Included in HTML Report? Yes Additional resources: Disabling IPv6 And Exchange \u2013 Going All The Way Guidance for configuring IPv6 in Windows for advanced users","title":"IPv6EnabledCheck"},{"location":"Diagnostics/HealthChecker/IPv6EnabledCheck/#ipv6-enabled-check","text":"Description: We check if IPv6 is enabled or not. If we determine that IPv6 has been disabled, we check to see if it's fully disabled as recommended. We determine if the IPv6 is fully disabled by checking to see if we have an IPv6 Address available on the NIC and that it matches what is found in the registry at SYSTEM\\CurrentControlSet\\Services\\Tcpip6\\Parameters\\DisabledComponents . If both places don't have IPv6 enabled/disabled properly a warning is thrown. This can cause communication issues if not properly disabled. Included in HTML Report? Yes Additional resources: Disabling IPv6 And Exchange \u2013 Going All The Way Guidance for configuring IPv6 in Windows for advanced users","title":"IPv6 Enabled Check"},{"location":"Diagnostics/HealthChecker/LMCompatibilityLevelInformationCheck/","text":"LM Compatibility Level Information Check LAN Manager authentication level setting determines which challenge/response authentication protocol is used for network logons. This choice affects the authentication protocol level that clients use, the session security level that the computers negotiate, and the authentication level that servers accept. Included in HTML Report? Yes Additional resources: Network security: LAN Manager authentication level","title":"LMCompatibilityLevelInformationCheck"},{"location":"Diagnostics/HealthChecker/LMCompatibilityLevelInformationCheck/#lm-compatibility-level-information-check","text":"LAN Manager authentication level setting determines which challenge/response authentication protocol is used for network logons. This choice affects the authentication protocol level that clients use, the session security level that the computers negotiate, and the authentication level that servers accept. Included in HTML Report? Yes Additional resources: Network security: LAN Manager authentication level","title":"LM Compatibility Level Information Check"},{"location":"Diagnostics/HealthChecker/MAPIFrontEndAppPoolGCModeCheck/","text":"MAPI Front End App Pool GC Mode Check Description: We validate the Garbage Collection (GC) configuration for MSExchangeMapiFrontEndAppPool App Pool if the check is executed against an Exchange 2013 server that is not running the EdgeTransport role. We check if: The server has a total memory of 21474836480 MB and gcServer.Enabled set to false \\ In this case we recommend to enable Server GC . gcServer.Enabled is neither true nor false \\ This case should be investigated. gcServer.Enabled is false In this case we're running Workstation GC.\\ You could be seeing some GC issues within the MSExchangeMapiFrontEndAppPool App Pool. However, you don't have enough memory installed on the system to recommend switching the GC mode by default without consulting a support professional. How to fix this: Go into the file MSExchangeMapiFrontEndAppPool_CLRConfig.config \\ You can find the file by running %windir%\\system32\\inetsrv\\appcmd.exe list apppool \"MSExchangeMapiFrontEndAppPool\" /text:\"CLRConfigFile\" via cmd.exe \\ It should be located here: %ExchangeInstallPath%\\bin\\MSExchangeMapiFrontEndAppPool_CLRConfig.config Open the file by using an elevated notepad.exe and change the gcServer Enabled value from false to true Recycle the MAPI Front End App Pool by running: Restart-WebAppPool MSExchangeMapiFrontEndAppPool via PowerShell or by running:\\ %windir%\\system32\\inetsrv\\appcmd.exe RECYCLE AppPool \"MSExchangeMapiFrontEndAppPool\" via cmd.exe Included in HTML Report? Yes Additional resources: Fundamentals of garbage collection Workstation and server garbage collection","title":"GCModeCheck"},{"location":"Diagnostics/HealthChecker/MAPIFrontEndAppPoolGCModeCheck/#mapi-front-end-app-pool-gc-mode-check","text":"Description: We validate the Garbage Collection (GC) configuration for MSExchangeMapiFrontEndAppPool App Pool if the check is executed against an Exchange 2013 server that is not running the EdgeTransport role. We check if: The server has a total memory of 21474836480 MB and gcServer.Enabled set to false \\ In this case we recommend to enable Server GC . gcServer.Enabled is neither true nor false \\ This case should be investigated. gcServer.Enabled is false In this case we're running Workstation GC.\\ You could be seeing some GC issues within the MSExchangeMapiFrontEndAppPool App Pool. However, you don't have enough memory installed on the system to recommend switching the GC mode by default without consulting a support professional. How to fix this: Go into the file MSExchangeMapiFrontEndAppPool_CLRConfig.config \\ You can find the file by running %windir%\\system32\\inetsrv\\appcmd.exe list apppool \"MSExchangeMapiFrontEndAppPool\" /text:\"CLRConfigFile\" via cmd.exe \\ It should be located here: %ExchangeInstallPath%\\bin\\MSExchangeMapiFrontEndAppPool_CLRConfig.config Open the file by using an elevated notepad.exe and change the gcServer Enabled value from false to true Recycle the MAPI Front End App Pool by running: Restart-WebAppPool MSExchangeMapiFrontEndAppPool via PowerShell or by running:\\ %windir%\\system32\\inetsrv\\appcmd.exe RECYCLE AppPool \"MSExchangeMapiFrontEndAppPool\" via cmd.exe Included in HTML Report? Yes Additional resources: Fundamentals of garbage collection Workstation and server garbage collection","title":"MAPI Front End App Pool GC Mode Check"},{"location":"Diagnostics/HealthChecker/NETFrameworkSupportabilityCheck/","text":".NET Framework Supportability Check Description: We check if the Exchange server is running a supported .NET Framework version. We do this based on the information provided by PG on Microsoft Docs (.NET Supportability Matrix). Included in HTML Report? Yes Additional resources: Microsoft .NET Framework Supportability Matrix","title":"NETFrameworkCheck"},{"location":"Diagnostics/HealthChecker/NETFrameworkSupportabilityCheck/#net-framework-supportability-check","text":"Description: We check if the Exchange server is running a supported .NET Framework version. We do this based on the information provided by PG on Microsoft Docs (.NET Supportability Matrix). Included in HTML Report? Yes Additional resources: Microsoft .NET Framework Supportability Matrix","title":".NET Framework Supportability Check"},{"location":"Diagnostics/HealthChecker/NumaBiosCheck/","text":"NUMA BIOS / All Processor Cores Visible Check Description: Check to see if the OS is able to see all the processor cores on the server. What normally happens is the OS is able to see 1 processor socket presented (aka half the number of cores) This can become a major problem on a server if you do not see all the processor cores for a few reasons. Logic is built into the Exchange Code to handle user workload management is based of the how much CPU the user is using or the process itself. When we aren't able to see all the cores on the system, the process can consume a higher amount than what logic dictates. We base this logic off of the number of cores presented to the OS by [System.Environment]::ProcessorCount . Because the underlying hardware has full access to all the processor cores, the process can go above what Exchange calculated out to set the threshold to be at and then throttling can occur. Sometimes the underlying setting isn't able to keep up and doesn't distribute the load between both the processor sockets, thus causing an issue because the application just lost half of its resources. You can see this occur when you look at the performance counter \"\\Processor Information(0,_Total)\\% Processor Time\" and \"\\Processor Information(1,_Total)\\% Processor Time\" as each one sees their own socket. One will go up while the other goes down. This might only happen for a few seconds, but there are health checks on the server that can be triggered to cause additional issues that will spiral the server. Included in HTML Report? Yes Additional resources: CUSTOMER ADVISORY c04650594 Exchange performance:HP NUMA BIOS settings Exchange 2016 users unable to edit Distribution Group membership using Outlook","title":"NumaBiosCheck"},{"location":"Diagnostics/HealthChecker/NumaBiosCheck/#numa-bios-all-processor-cores-visible-check","text":"Description: Check to see if the OS is able to see all the processor cores on the server. What normally happens is the OS is able to see 1 processor socket presented (aka half the number of cores) This can become a major problem on a server if you do not see all the processor cores for a few reasons. Logic is built into the Exchange Code to handle user workload management is based of the how much CPU the user is using or the process itself. When we aren't able to see all the cores on the system, the process can consume a higher amount than what logic dictates. We base this logic off of the number of cores presented to the OS by [System.Environment]::ProcessorCount . Because the underlying hardware has full access to all the processor cores, the process can go above what Exchange calculated out to set the threshold to be at and then throttling can occur. Sometimes the underlying setting isn't able to keep up and doesn't distribute the load between both the processor sockets, thus causing an issue because the application just lost half of its resources. You can see this occur when you look at the performance counter \"\\Processor Information(0,_Total)\\% Processor Time\" and \"\\Processor Information(1,_Total)\\% Processor Time\" as each one sees their own socket. One will go up while the other goes down. This might only happen for a few seconds, but there are health checks on the server that can be triggered to cause additional issues that will spiral the server. Included in HTML Report? Yes Additional resources: CUSTOMER ADVISORY c04650594 Exchange performance:HP NUMA BIOS settings Exchange 2016 users unable to edit Distribution Group membership using Outlook","title":"NUMA BIOS / All Processor Cores Visible Check"},{"location":"Diagnostics/HealthChecker/PacketsLossCheck/","text":"Packets Loss Check Description: We check if there are any PacketsReceivedDiscarded logged for the NIC. Large package loss can cause a performance impact on a system and should be investigated and fixed. Good: PacketsReceivedDiscarded is 0 Warning: PacketsReceivedDiscarded lower than 1000 Error: PacketsReceivedDiscarded greater than 1000 NOTE: This counter is accumulation from reboot, or if the NIC setting was changed, so the counter can be stale for some time. However, even though you might not be actively dropping packets, the counter should be at 0 in a healthy environment. Included in HTML Report? Yes Additional Information Large packet loss in the guest OS using VMXNET3 in ESXi (2039495)","title":"PacketsLossCheck"},{"location":"Diagnostics/HealthChecker/PacketsLossCheck/#packets-loss-check","text":"Description: We check if there are any PacketsReceivedDiscarded logged for the NIC. Large package loss can cause a performance impact on a system and should be investigated and fixed. Good: PacketsReceivedDiscarded is 0 Warning: PacketsReceivedDiscarded lower than 1000 Error: PacketsReceivedDiscarded greater than 1000 NOTE: This counter is accumulation from reboot, or if the NIC setting was changed, so the counter can be stale for some time. However, even though you might not be actively dropping packets, the counter should be at 0 in a healthy environment. Included in HTML Report? Yes Additional Information Large packet loss in the guest OS using VMXNET3 in ESXi (2039495)","title":"Packets Loss Check"},{"location":"Diagnostics/HealthChecker/PagefileSizeCheck/","text":"Pagefile Size Check Description: We check if the Pagefile is configured as recommended. Exchange 2019 Set the paging file minimum and maximum value to the same size: 25% of installed memory. Exchange 2013/2016 Set the paging file minimum and maximum value to the same size: \u2022 Less than 32 GB of RAM installed: Physical RAM plus 10MB, up to a maximum value of 32GB (32,778MB). \u2022 32 GB of RAM or more installed: 32GB Included in HTML Report? Yes Additional resources: Pagefile requirements for Exchange 2019 Pagefile requirements for Exchange 2016","title":"PagefileCheck"},{"location":"Diagnostics/HealthChecker/PagefileSizeCheck/#pagefile-size-check","text":"Description: We check if the Pagefile is configured as recommended.","title":"Pagefile Size Check"},{"location":"Diagnostics/HealthChecker/PagefileSizeCheck/#exchange-2019","text":"Set the paging file minimum and maximum value to the same size: 25% of installed memory.","title":"Exchange 2019"},{"location":"Diagnostics/HealthChecker/PagefileSizeCheck/#exchange-20132016","text":"Set the paging file minimum and maximum value to the same size: \u2022 Less than 32 GB of RAM installed: Physical RAM plus 10MB, up to a maximum value of 32GB (32,778MB). \u2022 32 GB of RAM or more installed: 32GB Included in HTML Report? Yes Additional resources: Pagefile requirements for Exchange 2019 Pagefile requirements for Exchange 2016","title":"Exchange 2013/2016"},{"location":"Diagnostics/HealthChecker/ProcessorCheck/","text":"Number Of Processors Description: Number of Processors is the number of processor sockets detected on the server. It is only recommended to have up to 2 processors on the server. [3] An additional note is displayed if Type is set to VMware and greater than 2 processors. [1] How This Is Checked ([array](Get-WmiObject -Class Win32_Processor)).count Number Of Logical and Physical Cores Show the number of Physical and Logical cores presented to the OS. This is provided by the WmiObject class Win32_Processor . We show a warning if we have more than 24 Logical Cores and running Exchange 2013/2016 [2] We show a warning if we have more than 48 Logical Cores and running Exchange 2019 [2] How This Is Checked $processor = Get-WmiObject -Class Win32_Processor $processor |ForEach-Object {$logical += $_.NumberOfLogicalProcessors; $physical += $_.NumberOfCores} PS C:\\> $logical 24 PS C:\\> $physical 12 Max Processor Speed Check to see what the Max Processor Speed is set to for the processor. If the processor is throttled which may be a result of a misconfigured Power Plan. NOTE: If Power Plan isn't set to High Performance and the processor is being throttled, this will be flagged that Power Plan is the cause and to fix it ASAP. How This Is Checked $processor = Get-WmiObject -Class Win32_Processor $throttled = $processor | Where-Object {$_.CurrentClockSpeed -lt $_.MaxClockSpeed} if ($throttled) { Write-Host (\"Throttling your CPU\") } Included in HTML Report? Yes Additional resources: 1 - Does corespersocket Affect Performance? 2 - Commodity servers 3 - Hardware requirements for Exchange 2019 Exchange 2013 Sizing Hardware requirements for Exchange 2016","title":"ProcessorCheck"},{"location":"Diagnostics/HealthChecker/ProcessorCheck/#number-of-processors","text":"Description: Number of Processors is the number of processor sockets detected on the server. It is only recommended to have up to 2 processors on the server. [3] An additional note is displayed if Type is set to VMware and greater than 2 processors. [1]","title":"Number Of Processors"},{"location":"Diagnostics/HealthChecker/ProcessorCheck/#how-this-is-checked","text":"([array](Get-WmiObject -Class Win32_Processor)).count","title":"How This Is Checked"},{"location":"Diagnostics/HealthChecker/ProcessorCheck/#number-of-logical-and-physical-cores","text":"Show the number of Physical and Logical cores presented to the OS. This is provided by the WmiObject class Win32_Processor . We show a warning if we have more than 24 Logical Cores and running Exchange 2013/2016 [2] We show a warning if we have more than 48 Logical Cores and running Exchange 2019 [2]","title":"Number Of Logical and Physical Cores"},{"location":"Diagnostics/HealthChecker/ProcessorCheck/#how-this-is-checked_1","text":"$processor = Get-WmiObject -Class Win32_Processor $processor |ForEach-Object {$logical += $_.NumberOfLogicalProcessors; $physical += $_.NumberOfCores} PS C:\\> $logical 24 PS C:\\> $physical 12","title":"How This Is Checked"},{"location":"Diagnostics/HealthChecker/ProcessorCheck/#max-processor-speed","text":"Check to see what the Max Processor Speed is set to for the processor. If the processor is throttled which may be a result of a misconfigured Power Plan. NOTE: If Power Plan isn't set to High Performance and the processor is being throttled, this will be flagged that Power Plan is the cause and to fix it ASAP.","title":"Max Processor Speed"},{"location":"Diagnostics/HealthChecker/ProcessorCheck/#how-this-is-checked_2","text":"$processor = Get-WmiObject -Class Win32_Processor $throttled = $processor | Where-Object {$_.CurrentClockSpeed -lt $_.MaxClockSpeed} if ($throttled) { Write-Host (\"Throttling your CPU\") } Included in HTML Report? Yes Additional resources: 1 - Does corespersocket Affect Performance? 2 - Commodity servers 3 - Hardware requirements for Exchange 2019 Exchange 2013 Sizing Hardware requirements for Exchange 2016","title":"How This Is Checked"},{"location":"Diagnostics/HealthChecker/RPCMinConnectionTimeoutCheck/","text":"RPC Minimum Connection Timeout Check Description: By default, Outlook Anywhere opens two default connections to the Exchange CAS called RPC_InData and RPC_OutData . The Outlook Anywhere client to server used a default timeout of 12 minutes (720 seconds) of inactivity and the server to the client timeout is 15 minutes (900 seconds) . These default Keep-Alive intervals are not aggressive enough for some of today\u2019s home networking devices and/or aggressive network devices on the Internet. Some of those devices are dropping TCP connections after as little as 5 minutes (300 seconds) of inactivity. When one or both of the two default connections are dropped, the connection to the Exchange server is essentially broken and not useable. Included in HTML Report? Yes Additional resources: Outlook Anywhere Network Timeout Issue","title":"RPCMinConnectionTimeoutCheck"},{"location":"Diagnostics/HealthChecker/RPCMinConnectionTimeoutCheck/#rpc-minimum-connection-timeout-check","text":"Description: By default, Outlook Anywhere opens two default connections to the Exchange CAS called RPC_InData and RPC_OutData . The Outlook Anywhere client to server used a default timeout of 12 minutes (720 seconds) of inactivity and the server to the client timeout is 15 minutes (900 seconds) . These default Keep-Alive intervals are not aggressive enough for some of today\u2019s home networking devices and/or aggressive network devices on the Internet. Some of those devices are dropping TCP connections after as little as 5 minutes (300 seconds) of inactivity. When one or both of the two default connections are dropped, the connection to the Exchange server is essentially broken and not useable. Included in HTML Report? Yes Additional resources: Outlook Anywhere Network Timeout Issue","title":"RPC Minimum Connection Timeout Check"},{"location":"Diagnostics/HealthChecker/RSSEnabledCheck/","text":"RSS Enabled Check Description: We check on Windows 2012 R2 or newer whether RSS (if it's supported from the NIC) is enabled or not. This is collected by the Get-NetAdapterRss cmdlet. We show a warning if it's supported on NIC-side but disabled. The Get-NetAdapterRss cmdlet gets receive side scaling (RSS) properties of the network adapters that support RSS. RSS is a scalability technology that distributes the receive network traffic among multiple processors by hashing the header of the incoming packet and using an indirection table. Without RSS in Windows Server\u00ae 2012 and later, network traffic is received on the first processor which can quickly reach full utilization limiting receive network throughput. Various properties can be configured to optimize the performance of RSS. Included in HTML Report? Yes Additional resources: Introduction to Receive Side Scaling","title":"RSSEnabledCheck"},{"location":"Diagnostics/HealthChecker/RSSEnabledCheck/#rss-enabled-check","text":"Description: We check on Windows 2012 R2 or newer whether RSS (if it's supported from the NIC) is enabled or not. This is collected by the Get-NetAdapterRss cmdlet. We show a warning if it's supported on NIC-side but disabled. The Get-NetAdapterRss cmdlet gets receive side scaling (RSS) properties of the network adapters that support RSS. RSS is a scalability technology that distributes the receive network traffic among multiple processors by hashing the header of the incoming packet and using an indirection table. Without RSS in Windows Server\u00ae 2012 and later, network traffic is received on the first processor which can quickly reach full utilization limiting receive network throughput. Various properties can be configured to optimize the performance of RSS. Included in HTML Report? Yes Additional resources: Introduction to Receive Side Scaling","title":"RSS Enabled Check"},{"location":"Diagnostics/HealthChecker/RebootPending/","text":"Reboot Pending Description: We show a warning if we detect an outstanding pending reboot. We also display the type of pending reboot. We differentiate between: PendingFileRenameOperations SccmReboot SccmRebootPending ComponentBasedServicingRebootPending AutoUpdatePendingReboot It is best to reboot the server to address these issues. It may take some time after a reboot to have the keys automatically removed. However, if they don't remove automatically, follow these steps to address the issue for the keys that were provided to be a problem. Open regedit to the desired location. Delete the key. If unable to delete the key, follow these steps: Right click on it Open permissions Click on Advanced Change ownership to your account Close Advanced window Give your account Full Control in Permissions window Delete the key NOTE: With Component Based Servicing\\RebootPending you need to do the same for Component Based Servicing\\PackagesPending prior to RebootPending NOTE: Follow the steps in this section carefully. Serious problems might occur if you modify the registry incorrectly. Before you modify it, back up the registry for restoration in case problems occur. Included in HTML Report? Yes Additional resources: Determine Pending Reboot Status\u2014PowerShell Style! Part 1 Determine Pending Reboot Status\u2014PowerShell Style! Part 2","title":"RebootPending"},{"location":"Diagnostics/HealthChecker/RebootPending/#reboot-pending","text":"Description: We show a warning if we detect an outstanding pending reboot. We also display the type of pending reboot. We differentiate between: PendingFileRenameOperations SccmReboot SccmRebootPending ComponentBasedServicingRebootPending AutoUpdatePendingReboot It is best to reboot the server to address these issues. It may take some time after a reboot to have the keys automatically removed. However, if they don't remove automatically, follow these steps to address the issue for the keys that were provided to be a problem. Open regedit to the desired location. Delete the key. If unable to delete the key, follow these steps: Right click on it Open permissions Click on Advanced Change ownership to your account Close Advanced window Give your account Full Control in Permissions window Delete the key NOTE: With Component Based Servicing\\RebootPending you need to do the same for Component Based Servicing\\PackagesPending prior to RebootPending NOTE: Follow the steps in this section carefully. Serious problems might occur if you modify the registry incorrectly. Before you modify it, back up the registry for restoration in case problems occur. Included in HTML Report? Yes Additional resources: Determine Pending Reboot Status\u2014PowerShell Style! Part 1 Determine Pending Reboot Status\u2014PowerShell Style! Part 2","title":"Reboot Pending"},{"location":"Diagnostics/HealthChecker/SMBv1Check/","text":"SMBv1 Check To make sure that your Exchange organization is better protected against the latest threats (for example Emotet, TrickBot or WannaCry to name a few) we recommend disabling SMBv1 if it\u2019s enabled on your Exchange (2013/2016/2019) server. There is no need to run the nearly 30-year-old SMBv1 protocol when Exchange 2013/2016/2019 is installed on your system. SMBv1 isn\u2019t safe and you lose key protections offered by later SMB protocol versions. This check verifies that SMBv1 is not installed (if OS allows) and that its activation is blocked. Included in HTML Report? Yes Additional resources: Exchange Server and SMBv1","title":"SMBv1Check"},{"location":"Diagnostics/HealthChecker/SMBv1Check/#smbv1-check","text":"To make sure that your Exchange organization is better protected against the latest threats (for example Emotet, TrickBot or WannaCry to name a few) we recommend disabling SMBv1 if it\u2019s enabled on your Exchange (2013/2016/2019) server. There is no need to run the nearly 30-year-old SMBv1 protocol when Exchange 2013/2016/2019 is installed on your system. SMBv1 isn\u2019t safe and you lose key protections offered by later SMB protocol versions. This check verifies that SMBv1 is not installed (if OS allows) and that its activation is blocked. Included in HTML Report? Yes Additional resources: Exchange Server and SMBv1","title":"SMBv1 Check"},{"location":"Diagnostics/HealthChecker/SleepyNICCheck/","text":"Sleepy NIC Check Description: We validate the NIC power saving options. It's recommended to disable NIC power saving options as this may cause packet loss. To detect the NIC power saving options, we're probing the sub keys under: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E972-E325-11CE-BFC1-08002bE10318} We then check if the PnPCapabilities REG_DWORD exists and if it does, we're validating its value. If it's 28 or 280 , NIC power saving is disabled as we recommend it. We skip this check for Multiplexor NIC adapters and in case that the host system is Hyper-V (because we're assuming that we don't support NIC power saving options on this platform). NOTE: If the REG_DWORD doesn't exists, we're assuming that NIC power saving is not disabled or configured and show a warning. Included in HTML Report? Yes Additional resources: Information about power management setting on a network adapter","title":"SleepyNICCheck"},{"location":"Diagnostics/HealthChecker/SleepyNICCheck/#sleepy-nic-check","text":"Description: We validate the NIC power saving options. It's recommended to disable NIC power saving options as this may cause packet loss. To detect the NIC power saving options, we're probing the sub keys under: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E972-E325-11CE-BFC1-08002bE10318} We then check if the PnPCapabilities REG_DWORD exists and if it does, we're validating its value. If it's 28 or 280 , NIC power saving is disabled as we recommend it. We skip this check for Multiplexor NIC adapters and in case that the host system is Hyper-V (because we're assuming that we don't support NIC power saving options on this platform). NOTE: If the REG_DWORD doesn't exists, we're assuming that NIC power saving is not disabled or configured and show a warning. Included in HTML Report? Yes Additional resources: Information about power management setting on a network adapter","title":"Sleepy NIC Check"},{"location":"Diagnostics/HealthChecker/TCPIPSettingsCheck/","text":"TCP/IP Settings Check Description: We validate if a KeepAliveTime DWORD value exists under HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters and verify that it is set to a recommended value. Exchange TCP KeepAliveTime should be set to 30 minutes or no less than 15 minutes. If there's no entry in the registry for KeepAliveTime then the value is 2 hours. This value, if not set correctly, can affect both connectivity and performance. You must make sure that the load balancer and any other devices in the path from client to Exchange be set correctly. The goal is to set Exchange with the lowest value so that client sessions when ended, are ended by the Exchange and not by a device. Example: Client -> Firewall (1 hour) -> NLB (40 minutes) -> Exchange Servers (20 Minutes) Included in HTML Report? Yes Additional resources: Checklist for Troubleshooting Performance Related issues in Exchange 2013, 2016 and 2019 (on-prem)","title":"TCPIPSettingsCheck"},{"location":"Diagnostics/HealthChecker/TCPIPSettingsCheck/#tcpip-settings-check","text":"Description: We validate if a KeepAliveTime DWORD value exists under HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters and verify that it is set to a recommended value. Exchange TCP KeepAliveTime should be set to 30 minutes or no less than 15 minutes. If there's no entry in the registry for KeepAliveTime then the value is 2 hours. This value, if not set correctly, can affect both connectivity and performance. You must make sure that the load balancer and any other devices in the path from client to Exchange be set correctly. The goal is to set Exchange with the lowest value so that client sessions when ended, are ended by the Exchange and not by a device. Example: Client -> Firewall (1 hour) -> NLB (40 minutes) -> Exchange Servers (20 Minutes) Included in HTML Report? Yes Additional resources: Checklist for Troubleshooting Performance Related issues in Exchange 2013, 2016 and 2019 (on-prem)","title":"TCP/IP Settings Check"},{"location":"Diagnostics/HealthChecker/TLSConfigurationCheck/","text":"TLS Configuration Check We check and validate Exchange servers TLS 1.0 - 1.2 configuration. We can detect mismatches in TLS versions for client and server. This is important because Exchange can be both a client and a server. We also check for the SystemDefaultTlsVersions registry value which controls if .NET Framework will inherit its defaults from the Windows Schannel DisabledByDefault registry values or not. An invalid TLS configuration can cause issues within Exchange for communication. Included in HTML Report? Yes Additional resources: Exchange Server TLS guidance, part 1: Getting Ready for TLS 1.2 Exchange Server TLS guidance Part 2: Enabling TLS 1.2 and Identifying Clients Not Using It Exchange Server TLS guidance Part 3: Turning Off TLS 1.0/1.1","title":"TLSConfigurationCheck"},{"location":"Diagnostics/HealthChecker/TLSConfigurationCheck/#tls-configuration-check","text":"We check and validate Exchange servers TLS 1.0 - 1.2 configuration. We can detect mismatches in TLS versions for client and server. This is important because Exchange can be both a client and a server. We also check for the SystemDefaultTlsVersions registry value which controls if .NET Framework will inherit its defaults from the Windows Schannel DisabledByDefault registry values or not. An invalid TLS configuration can cause issues within Exchange for communication. Included in HTML Report? Yes Additional resources: Exchange Server TLS guidance, part 1: Getting Ready for TLS 1.2 Exchange Server TLS guidance Part 2: Enabling TLS 1.2 and Identifying Clients Not Using It Exchange Server TLS guidance Part 3: Turning Off TLS 1.0/1.1","title":"TLS Configuration Check"},{"location":"Diagnostics/HealthChecker/VisualCRedistributableVersionCheck/","text":"Visual C++ Redistributable Version Check Description: We check if the the latest Visual C++ Redistributable version, required for the installed Exchange server role, is installed or not. Included in HTML Report? Yes Additional resources: Microsoft Visual C++ Redistributable Latest Supported Downloads Exchange Server 2019 prerequisites Exchange Server 2016 prerequisites","title":"VisualCCheck"},{"location":"Diagnostics/HealthChecker/VisualCRedistributableVersionCheck/#visual-c-redistributable-version-check","text":"Description: We check if the the latest Visual C++ Redistributable version, required for the installed Exchange server role, is installed or not. Included in HTML Report? Yes Additional resources: Microsoft Visual C++ Redistributable Latest Supported Downloads Exchange Server 2019 prerequisites Exchange Server 2016 prerequisites","title":"Visual C++ Redistributable Version Check"},{"location":"Diagnostics/HealthChecker/VulnerabilityCheck/","text":"Vulnerability Check The script performs different checks to detect vulnerabilities which may lead into a security issue for the Exchange server. Vulnerability checks performed: Check the Exchange server build number against known vulnerabilities that exists within a specific build Check for CVE-2020-0796 SMBv3 vulnerability Check for CVE-2020-1147 .NET Core & .NET Framework vulnerability Check for CVE-2021-1730 Download Domains state Included in HTML Report? Yes","title":"VulnerabilityCheck"},{"location":"Diagnostics/HealthChecker/VulnerabilityCheck/#vulnerability-check","text":"The script performs different checks to detect vulnerabilities which may lead into a security issue for the Exchange server. Vulnerability checks performed: Check the Exchange server build number against known vulnerabilities that exists within a specific build Check for CVE-2020-0796 SMBv3 vulnerability Check for CVE-2020-1147 .NET Core & .NET Framework vulnerability Check for CVE-2021-1730 Download Domains state Included in HTML Report? Yes","title":"Vulnerability Check"},{"location":"Hybrid/Test-HMAEAS/","text":"Validating Hybrid Modern Authentication setup for Outlook for iOS and Android Download the latest release: Test-HMAEAS.ps1 This script allows you to check and see if your on-premises Exchange environment is configured correctly to use Hybrid Modern Authentication (HMA) with Outlook for iOS and Android. For this to work correctly, you will need to enable HMA and follow HMA Outlook for iOS and Android guidance to configure this feature properly. To run the script, at minimum you will need a valid SMTP Address for a user that is located on-premises. To test basic AutoDiscover and a Empty Bearer Authorization check you can run: .\\Test-HMAEAS.ps1 user@contoso.com To test basic AutoDiscover with a custom AutoDiscover Name and also do Empty Bearer Authorization check you can run: .\\Test-HMAEAS.ps1 user@contoso.com -CustomAutoD autodiscover.contoso.com To test basic EAS Connectivity you can run (you will need to use the users credentials for this test): .\\Test-HMAEAS.ps1 user@contoso.com -TestEAS","title":"Test-HMAEAS"},{"location":"Hybrid/Test-HMAEAS/#validating-hybrid-modern-authentication-setup-for-outlook-for-ios-and-android","text":"Download the latest release: Test-HMAEAS.ps1 This script allows you to check and see if your on-premises Exchange environment is configured correctly to use Hybrid Modern Authentication (HMA) with Outlook for iOS and Android. For this to work correctly, you will need to enable HMA and follow HMA Outlook for iOS and Android guidance to configure this feature properly. To run the script, at minimum you will need a valid SMTP Address for a user that is located on-premises. To test basic AutoDiscover and a Empty Bearer Authorization check you can run: .\\Test-HMAEAS.ps1 user@contoso.com To test basic AutoDiscover with a custom AutoDiscover Name and also do Empty Bearer Authorization check you can run: .\\Test-HMAEAS.ps1 user@contoso.com -CustomAutoD autodiscover.contoso.com To test basic EAS Connectivity you can run (you will need to use the users credentials for this test): .\\Test-HMAEAS.ps1 user@contoso.com -TestEAS","title":"Validating Hybrid Modern Authentication setup for Outlook for iOS and Android"},{"location":"M365/DLT365Groupsupgrade/","text":"DLT365Groupsupgrade Download the latest release: DLT365Groupsupgrade.ps1 Validating Distribution group eligibility for upgrade to O365 Group This script allows you to check Distribution to O365 Group migration eligibility for a specific distribution group SMTP, for more information over the Distribution to O365 Group migration blockers please check: https://docs.microsoft.com/en-us/microsoft-365/admin/manage/upgrade-distribution-lists?view=o365-worldwide The script will prompt for global administrator username & password to connect to EXO Then the script will ask for required group smtp Then start to check and provide feedback in case group migration blockers found as illustrated below:","title":"DLT365Groupsupgrade"},{"location":"M365/DLT365Groupsupgrade/#dlt365groupsupgrade","text":"Download the latest release: DLT365Groupsupgrade.ps1","title":"DLT365Groupsupgrade"},{"location":"M365/DLT365Groupsupgrade/#validating-distribution-group-eligibility-for-upgrade-to-o365-group","text":"This script allows you to check Distribution to O365 Group migration eligibility for a specific distribution group SMTP, for more information over the Distribution to O365 Group migration blockers please check: https://docs.microsoft.com/en-us/microsoft-365/admin/manage/upgrade-distribution-lists?view=o365-worldwide The script will prompt for global administrator username & password to connect to EXO Then the script will ask for required group smtp Then start to check and provide feedback in case group migration blockers found as illustrated below:","title":"Validating Distribution group eligibility for upgrade to O365 Group"},{"location":"Performance/ExPerfAnalyzer/","text":"ExPerfAnalyzer Download the latest release: ExPerfAnalyzer.ps1 Running the script .\\ExPerfAnalyzer.ps1 .\\EXSERVER01_FULL_000001.BLG Registering script as a default handler .\\ExPerfAnalyzer.ps1 -RegisterHandler PowerShell must be running as an administrator for this command to work. The script will register itself as a shell handler for perfmon .blg files. You can then right-click any .blg file and select ExPerfAnalyzer to quickly parse the file. Inspiration This script was inspired by Performance Analysis of Logs (PAL) and PMA.VBS (an internal tool used by Windows support). FAQ This takes forever to run. It's faster than PAL. Why don't I just use PAL? You could, but PAL takes even longer to run and throws a lot of false positives. What's the expected running time? v0.2.2 and an Intel Core i7-4810MQ @ 2.8Ghz processed a 1GB perfmon sitting on an SSD in 11 seconds. Can I edit this script however I'd like? Yes, that's the magic of open source software! Do you accept pull requests? Can I contribute to the script? Of course!","title":"ExPerfAnalyzer"},{"location":"Performance/ExPerfAnalyzer/#experfanalyzer","text":"Download the latest release: ExPerfAnalyzer.ps1","title":"ExPerfAnalyzer"},{"location":"Performance/ExPerfAnalyzer/#running-the-script","text":".\\ExPerfAnalyzer.ps1 .\\EXSERVER01_FULL_000001.BLG","title":"Running the script"},{"location":"Performance/ExPerfAnalyzer/#registering-script-as-a-default-handler","text":".\\ExPerfAnalyzer.ps1 -RegisterHandler PowerShell must be running as an administrator for this command to work. The script will register itself as a shell handler for perfmon .blg files. You can then right-click any .blg file and select ExPerfAnalyzer to quickly parse the file.","title":"Registering script as a default handler"},{"location":"Performance/ExPerfAnalyzer/#inspiration","text":"This script was inspired by Performance Analysis of Logs (PAL) and PMA.VBS (an internal tool used by Windows support).","title":"Inspiration"},{"location":"Performance/ExPerfAnalyzer/#faq","text":"This takes forever to run. It's faster than PAL. Why don't I just use PAL? You could, but PAL takes even longer to run and throws a lot of false positives. What's the expected running time? v0.2.2 and an Intel Core i7-4810MQ @ 2.8Ghz processed a 1GB perfmon sitting on an SSD in 11 seconds. Can I edit this script however I'd like? Yes, that's the magic of open source software! Do you accept pull requests? Can I contribute to the script? Of course!","title":"FAQ"},{"location":"Performance/SimplePerf/","text":"SimplePerf Download the latest release: SimplePerf.ps1 This script is a stripped-down and streamlined performance log collector for Exchange Server. Simplest usage: .\\SimplePerf.ps1 -Start And later: .\\SimplePerf.ps1 -Stop For more details and examples, run Get-Help against the script: Get-Help -Full .\\SimplePerf.ps1 For more features than this script provides, use ExPerfWiz.","title":"SimplePerf"},{"location":"Performance/SimplePerf/#simpleperf","text":"Download the latest release: SimplePerf.ps1 This script is a stripped-down and streamlined performance log collector for Exchange Server. Simplest usage: .\\SimplePerf.ps1 -Start And later: .\\SimplePerf.ps1 -Stop For more details and examples, run Get-Help against the script: Get-Help -Full .\\SimplePerf.ps1 For more features than this script provides, use ExPerfWiz.","title":"SimplePerf"},{"location":"PublicFolders/SourceSideValidations/","text":"SourceSideValidations Download the latest release: SourceSideValidations.ps1 This script performs pre-migration public folder checks for Exchange 2013, 2016, and 2019. For Exchange 2010, please use previous script found here . Syntax SourceSideValidations.ps1 [-StartFresh <bool>] [-SlowTraversal] [-ResultsFile <string>] [-SkipVersionCheck] [-Tests <string[]>] [<CommonParameters>] SourceSideValidations.ps1 -RemoveInvalidPermissions [-ResultsFile <string>] [-SkipVersionCheck] [<CommonParameters>] SourceSideValidations.ps1 -SummarizePreviousResults [-ResultsFile <string>] [-SkipVersionCheck] [<CommonParameters>] Output The script will generate the following files. Usually the only one we care about is ValidationResults.csv. The others are purely for saving time on subsequent runs. File Name Content Use IpmSubtree.csv A subset of properties of all Public Folders Running with -StartFresh $false loads this file instead of retrieving fresh data Statistics.csv EntryID, item count, and size of every folder Running with -StartFresh $false loads this file instead of retrieving fresh data NonIpmSubtree.csv A subset of properties of all System Folders Running with -StartFresh $false loads this file instead of retrieving fresh data ValidationResults.csv Information about any issues found. This is file we want to examine to understand any issues found. The script will display a summary of what it found, and in many cases it will provide an example command that uses input from this file to fix the problem. Tests The script performs the following tests. The ValidationResults.csv can be filtered by ResultType to identify the respective folders. Test Category ResultType Criteria DumpsterMapping BadDumpsterMapping DumpsterEntryId is null, or the dumpster is not in \\NON_IPM_SUBTREE\\DUMPSTER_ROOT, or the DumpsterEntryId of the dumpster does not point back to the folder. Limit ChildCount The folder has more than 10,000 direct child folders. Limit EmptyFolder The folder and all its child folders (recursive) have no items. Limit FolderPathDepth The folder path is greater than 299 folders deep. Limit HierarchyCount There are more than 250,000 total folders in the hierarchy. Limit HierarchyAndDumpsterCount There are more than 250,000 total folders if you count both the folders and their dumpsters. Limit ItemCount The folder has more than 1,000,000 items. Limit TotalItemSize The items directly in this folder (not child folders) add up to more than 25 GB. MailEnabledFolder MailDisabledWithProxyGuid The folder is not mail-enabled, but it has the GUID of an Active Directory object in its MailRecipientGuid property. MailEnabledFolder MailEnabledSystemFolder The folder is a system folder, which should not be mail-enabled. MailEnabledFolder MailEnabledWithNoADOjbect The folder is mail-enabled, but it has no Active Directory object. MailEnabledFolder OrphanedMPF An Active Directory object exists, but it is not linked to any folder. MailEnabledFolder OrphanedMPFDuplicate An Active Directory object exists, but it points to a public folder which points to a different object. MailEnabledFolder OrphanedMPFDisconnected An Active Directory object exists, but it points to a public folder that is mail-disabled. FolderName SpecialCharacters Folder name contains @, /, or \\. Permission BadPermission The permission does not refer to a valid entity. Usage Typically, the script should be run with no parameters: .\\SourceSideValidations.ps1 Progress indicators are displayed as it collects data and validates the results. The final test, which checks permissions, will usually take much longer than the other tests. When all the tests are done, the script provides a summary of what it found, along with example commands that fix some issues. In this example output, the script calls out four issues. First, it points out that we have 111,124 folders that are completely empty (this is a lab). Note the ResultType of EmptyFolder. If we want to see the list of empty folders, we can open up ValidationResults.csv in Excel, filter for a ResultType of EmptyFolder, and then we see all those results: For these folders, no action is required. The script is just giving us information. The next thing it calls out is that 4 folders have problematic characters in the name. The output tells us these have a ResultType of SpecialCharacters. Filtering for that in the CSV, we see the folders. Fortunately, the script gives us a command we can run to fix all the names. We can copy and paste the command it gave us, let it run, and then spot check the result. Now that the names are fixed, we move on to the next item. The script tells us we have a mail public folder object for a public folder that is mail-disabled. For this type of problem, we need to examine the folder and figure out what we want to do. The CSV file gives us the DN of the mail object and the entry ID of the folder, which we can use to examine the two objects. The folder says MailEnabled is False, yet we have a MailPublicFolder which points to it. We need to decide whether we want the folder to receive email or not. For this lab, I decide I do want the folder to be mail-enabled, so I remove the orphaned MailPublicFolder and then mail-enable the folder. I also confirm the new object has the same email address as the old one. This might need to be adjusted manually in some cases, but here I didn't have to. Finally, the script says we have 9,850 invalid permissions. Fortunately, this is another one that is easy to fix, as the script provides a command. This one is going to take a while. Once completed, we can rerun SourceSideValidations to make sure all the issues are resolved. If you close the shell and you need to see the summary results again, use the -SummarizePreviousResults switch. .\\SourceSideValidations -SummarizePreviousResults The script reads the output file and repeats the instructions on what to do. You can also summarize the results from previous runs, or point to files in other locations, by providing the -ResultsFile parameter.","title":"SourceSideValidations"},{"location":"PublicFolders/SourceSideValidations/#sourcesidevalidations","text":"Download the latest release: SourceSideValidations.ps1 This script performs pre-migration public folder checks for Exchange 2013, 2016, and 2019. For Exchange 2010, please use previous script found here .","title":"SourceSideValidations"},{"location":"PublicFolders/SourceSideValidations/#syntax","text":"SourceSideValidations.ps1 [-StartFresh <bool>] [-SlowTraversal] [-ResultsFile <string>] [-SkipVersionCheck] [-Tests <string[]>] [<CommonParameters>] SourceSideValidations.ps1 -RemoveInvalidPermissions [-ResultsFile <string>] [-SkipVersionCheck] [<CommonParameters>] SourceSideValidations.ps1 -SummarizePreviousResults [-ResultsFile <string>] [-SkipVersionCheck] [<CommonParameters>]","title":"Syntax"},{"location":"PublicFolders/SourceSideValidations/#output","text":"The script will generate the following files. Usually the only one we care about is ValidationResults.csv. The others are purely for saving time on subsequent runs. File Name Content Use IpmSubtree.csv A subset of properties of all Public Folders Running with -StartFresh $false loads this file instead of retrieving fresh data Statistics.csv EntryID, item count, and size of every folder Running with -StartFresh $false loads this file instead of retrieving fresh data NonIpmSubtree.csv A subset of properties of all System Folders Running with -StartFresh $false loads this file instead of retrieving fresh data ValidationResults.csv Information about any issues found. This is file we want to examine to understand any issues found. The script will display a summary of what it found, and in many cases it will provide an example command that uses input from this file to fix the problem.","title":"Output"},{"location":"PublicFolders/SourceSideValidations/#tests","text":"The script performs the following tests. The ValidationResults.csv can be filtered by ResultType to identify the respective folders. Test Category ResultType Criteria DumpsterMapping BadDumpsterMapping DumpsterEntryId is null, or the dumpster is not in \\NON_IPM_SUBTREE\\DUMPSTER_ROOT, or the DumpsterEntryId of the dumpster does not point back to the folder. Limit ChildCount The folder has more than 10,000 direct child folders. Limit EmptyFolder The folder and all its child folders (recursive) have no items. Limit FolderPathDepth The folder path is greater than 299 folders deep. Limit HierarchyCount There are more than 250,000 total folders in the hierarchy. Limit HierarchyAndDumpsterCount There are more than 250,000 total folders if you count both the folders and their dumpsters. Limit ItemCount The folder has more than 1,000,000 items. Limit TotalItemSize The items directly in this folder (not child folders) add up to more than 25 GB. MailEnabledFolder MailDisabledWithProxyGuid The folder is not mail-enabled, but it has the GUID of an Active Directory object in its MailRecipientGuid property. MailEnabledFolder MailEnabledSystemFolder The folder is a system folder, which should not be mail-enabled. MailEnabledFolder MailEnabledWithNoADOjbect The folder is mail-enabled, but it has no Active Directory object. MailEnabledFolder OrphanedMPF An Active Directory object exists, but it is not linked to any folder. MailEnabledFolder OrphanedMPFDuplicate An Active Directory object exists, but it points to a public folder which points to a different object. MailEnabledFolder OrphanedMPFDisconnected An Active Directory object exists, but it points to a public folder that is mail-disabled. FolderName SpecialCharacters Folder name contains @, /, or \\. Permission BadPermission The permission does not refer to a valid entity.","title":"Tests"},{"location":"PublicFolders/SourceSideValidations/#usage","text":"Typically, the script should be run with no parameters: .\\SourceSideValidations.ps1 Progress indicators are displayed as it collects data and validates the results. The final test, which checks permissions, will usually take much longer than the other tests. When all the tests are done, the script provides a summary of what it found, along with example commands that fix some issues. In this example output, the script calls out four issues. First, it points out that we have 111,124 folders that are completely empty (this is a lab). Note the ResultType of EmptyFolder. If we want to see the list of empty folders, we can open up ValidationResults.csv in Excel, filter for a ResultType of EmptyFolder, and then we see all those results: For these folders, no action is required. The script is just giving us information. The next thing it calls out is that 4 folders have problematic characters in the name. The output tells us these have a ResultType of SpecialCharacters. Filtering for that in the CSV, we see the folders. Fortunately, the script gives us a command we can run to fix all the names. We can copy and paste the command it gave us, let it run, and then spot check the result. Now that the names are fixed, we move on to the next item. The script tells us we have a mail public folder object for a public folder that is mail-disabled. For this type of problem, we need to examine the folder and figure out what we want to do. The CSV file gives us the DN of the mail object and the entry ID of the folder, which we can use to examine the two objects. The folder says MailEnabled is False, yet we have a MailPublicFolder which points to it. We need to decide whether we want the folder to receive email or not. For this lab, I decide I do want the folder to be mail-enabled, so I remove the orphaned MailPublicFolder and then mail-enable the folder. I also confirm the new object has the same email address as the old one. This might need to be adjusted manually in some cases, but here I didn't have to. Finally, the script says we have 9,850 invalid permissions. Fortunately, this is another one that is easy to fix, as the script provides a command. This one is going to take a while. Once completed, we can rerun SourceSideValidations to make sure all the issues are resolved. If you close the shell and you need to see the summary results again, use the -SummarizePreviousResults switch. .\\SourceSideValidations -SummarizePreviousResults The script reads the output file and repeats the instructions on what to do. You can also summarize the results from previous runs, or point to files in other locations, by providing the -ResultsFile parameter.","title":"Usage"},{"location":"PublicFolders/ValidateMailEnabledPublicFolders/","text":"ValidateMailEnabledPublicFolders Download the latest release: ValidateMailEnabledPublicFolders.ps1 This script performs pre-migration checks on mail-enabled folders on Exchange 2010 and up. Note that these checks are also included in the new SourceSideValidations.ps1 for 2013 and up.","title":"ValidateMailEnabledPublicFolders"},{"location":"PublicFolders/ValidateMailEnabledPublicFolders/#validatemailenabledpublicfolders","text":"Download the latest release: ValidateMailEnabledPublicFolders.ps1 This script performs pre-migration checks on mail-enabled folders on Exchange 2010 and up. Note that these checks are also included in the new SourceSideValidations.ps1 for 2013 and up.","title":"ValidateMailEnabledPublicFolders"},{"location":"Retention/Get-MRMDetails/","text":"Get-MRMDetails Download the latest release: Get-MRMDetails.ps1 This script will gather the MRM configuration for a given user. It will collect the current MRM Policy and Tags for the Exchange Organization, the current MRM Policy and Tags applied to the user, the current Exchange Diagnostics Logs for the user, and Exchange Audit logs for the mailbox selected. The resulting data will allow you to see what tags are applied to the user and when the Managed Folder Assistant has run against the user. It also will grab the Admin Audit log so that we can tell if the Tags or Polices have been modified and who modified them. To run the script, at minimum you will need a valid SMTP Address for a user. Then you can review the associated logs that are generated from the script. Syntax: .\\Get-MRMDetails.ps1 -Mailbox <user> Example to collect the MRM Details from rob@contoso.com: .\\Get-MRMDetails.ps1 -Mailbox rob@contoso.com","title":"Get-MRMDetails"},{"location":"Retention/Get-MRMDetails/#get-mrmdetails","text":"Download the latest release: Get-MRMDetails.ps1 This script will gather the MRM configuration for a given user. It will collect the current MRM Policy and Tags for the Exchange Organization, the current MRM Policy and Tags applied to the user, the current Exchange Diagnostics Logs for the user, and Exchange Audit logs for the mailbox selected. The resulting data will allow you to see what tags are applied to the user and when the Managed Folder Assistant has run against the user. It also will grab the Admin Audit log so that we can tell if the Tags or Polices have been modified and who modified them. To run the script, at minimum you will need a valid SMTP Address for a user. Then you can review the associated logs that are generated from the script. Syntax: .\\Get-MRMDetails.ps1 -Mailbox <user> Example to collect the MRM Details from rob@contoso.com: .\\Get-MRMDetails.ps1 -Mailbox rob@contoso.com","title":"Get-MRMDetails"},{"location":"Search/Troubleshoot-ModernSearch/","text":"Troubleshoot-ModernSearch Download the latest release: Troubleshoot-ModernSearch.ps1 This script is still in development. However, this should be able to quickly determine if an item is indexed or not and why it isn't indexed. Just provide the full message subject and the mailbox identity and it will dump out the information needed to determine if the message is indexed or not. Parameters Parameter Description MailboxIdentity Provide the identity of the mailbox that you wish to be looking at. If you are able to find it via Get-Mailbox it is able to be used here. ItemSubject Provide the message's subject name. Must be exact if -MatchSubjectSubstring isn't used. This includes if there is a trailing space at the end of the message subject. MatchSubjectSubstring Enable to perform a like search in the mailbox with the value that is passed with -ItemSubject . FolderName If you want to scope the search to a folder for better and faster results, include the name of the folder that the message is in. DocumentId If you already know the document ID number for the mailbox, provide this. This can not be use with -ItemSubject parameter. Category Provides a breakdown of the messages in the mailbox for that index category state. Possible options are: All , Indexed , PartiallyIndexed , NotIndexed , Corrupted , Stale , and ShouldNotBeIndexed . NOTE: Depending the item count, this can take a long while to complete. GroupMessages To group the messages by Indexing Error Message and Permanent failure state or not. By Disabling this, you get more properties displayed of the message as well. Server Provide a list of possible servers that you wish to get mailbox statistics for all the active databases on that server. SortByProperty Provide the property that you wish to have the information sorted by in the output to screen. Default is to sort by FullyIndexPercentage ExcludeFullyIndexedMailboxes When look at the multiple mailbox statistics, we don't want to view the mailboxes that are fully indexed without any indexing problems. QueryString Include a string that you are using to try to find this item, we will run an instant query against it to see if we can find it. IsArchive Enable if you want to look at the archive mailbox. IsPublicFolder Enable if you want to look at a public folder mailbox. Examples This is an example of how to run a basic query again a single item. .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity han@solo.com -ItemSubject \"Test Message\" This is an example of how to run the script when you want to query multiple items with a similar subject name. .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity \"Zelda01\" -ItemSubject \"Initial Indexing\" -MatchSubjectSubstring This is an example of how to run the script against an Archive Mailbox. .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity han@solo.com -ItemSubject \"Test Message\" -IsArchive This is an example of how to run the script against a Public Folder Mailbox .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity PFMailbox2 -ItemSubject \"My Item Test\" -IsPublicFolder This is an example of how to run the script to get all the index state categories .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity \"Zelda02\" -Category \"All\" This is an example of how to run the script to get all the non indexed items .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity \"Zelda02\" -Category \"NotIndexed\" This is an example of how to run the script to get all the active mailboxes on a server .\\Troubleshoot-ModernSearch.ps1 -Server \"Solo-E19A\"","title":"Troubleshoot-ModernSearch"},{"location":"Search/Troubleshoot-ModernSearch/#troubleshoot-modernsearch","text":"Download the latest release: Troubleshoot-ModernSearch.ps1 This script is still in development. However, this should be able to quickly determine if an item is indexed or not and why it isn't indexed. Just provide the full message subject and the mailbox identity and it will dump out the information needed to determine if the message is indexed or not.","title":"Troubleshoot-ModernSearch"},{"location":"Search/Troubleshoot-ModernSearch/#parameters","text":"Parameter Description MailboxIdentity Provide the identity of the mailbox that you wish to be looking at. If you are able to find it via Get-Mailbox it is able to be used here. ItemSubject Provide the message's subject name. Must be exact if -MatchSubjectSubstring isn't used. This includes if there is a trailing space at the end of the message subject. MatchSubjectSubstring Enable to perform a like search in the mailbox with the value that is passed with -ItemSubject . FolderName If you want to scope the search to a folder for better and faster results, include the name of the folder that the message is in. DocumentId If you already know the document ID number for the mailbox, provide this. This can not be use with -ItemSubject parameter. Category Provides a breakdown of the messages in the mailbox for that index category state. Possible options are: All , Indexed , PartiallyIndexed , NotIndexed , Corrupted , Stale , and ShouldNotBeIndexed . NOTE: Depending the item count, this can take a long while to complete. GroupMessages To group the messages by Indexing Error Message and Permanent failure state or not. By Disabling this, you get more properties displayed of the message as well. Server Provide a list of possible servers that you wish to get mailbox statistics for all the active databases on that server. SortByProperty Provide the property that you wish to have the information sorted by in the output to screen. Default is to sort by FullyIndexPercentage ExcludeFullyIndexedMailboxes When look at the multiple mailbox statistics, we don't want to view the mailboxes that are fully indexed without any indexing problems. QueryString Include a string that you are using to try to find this item, we will run an instant query against it to see if we can find it. IsArchive Enable if you want to look at the archive mailbox. IsPublicFolder Enable if you want to look at a public folder mailbox.","title":"Parameters"},{"location":"Search/Troubleshoot-ModernSearch/#examples","text":"This is an example of how to run a basic query again a single item. .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity han@solo.com -ItemSubject \"Test Message\" This is an example of how to run the script when you want to query multiple items with a similar subject name. .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity \"Zelda01\" -ItemSubject \"Initial Indexing\" -MatchSubjectSubstring This is an example of how to run the script against an Archive Mailbox. .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity han@solo.com -ItemSubject \"Test Message\" -IsArchive This is an example of how to run the script against a Public Folder Mailbox .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity PFMailbox2 -ItemSubject \"My Item Test\" -IsPublicFolder This is an example of how to run the script to get all the index state categories .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity \"Zelda02\" -Category \"All\" This is an example of how to run the script to get all the non indexed items .\\Troubleshoot-ModernSearch.ps1 -MailboxIdentity \"Zelda02\" -Category \"NotIndexed\" This is an example of how to run the script to get all the active mailboxes on a server .\\Troubleshoot-ModernSearch.ps1 -Server \"Solo-E19A\"","title":"Examples"},{"location":"Security/EOMT/","text":"Exchange On-premises Mitigation Tool (EOMT) Download the latest release: EOMT.ps1 This script contains mitigations to help address the following vulnerabilities. CVE-2021-26855 This is the most effective way to help quickly protect and mitigate your Exchange Servers prior to patching. We recommend this script over the previous ExchangeMitigations.ps1 script. The Exchange On-premises Mitigation Tool automatically downloads any dependencies and runs the Microsoft Safety Scanner. This a better approach for Exchange deployments with Internet access and for those who want an attempt at automated remediation. We have not observed any impact to Exchange Server functionality via these mitigation methods. EOMT.ps1 is completely automated and uses familiar mitigation methods previously documented. This script has four operations it performs: +NEW Check for the latest version of EOMT and download it. Mitigate against current known attacks using CVE-2021-26855 via a URL Rewrite configuration Scan the Exchange Server using the Microsoft Safety Scanner Attempt to remediate compromises detected by the Microsoft Safety Scanner. This a better approach for Exchange deployments with Internet access and for those who want an attempt at automated remediation. We have not observed any impact to Exchange Server functionality via these mitigation methods nor do these mitigation methods make any direct changes that disable features of Exchange. Use of the Exchange On-premises Mitigation Tool and the Microsoft Saftey Scanner are subject to the terms of the Microsoft Privacy Statement: https://aka.ms/privacy Requirements to run the Exchange On-premises Mitigation Tool External Internet Connection from your Exchange server (required to download the Microsoft Safety Scanner and the IIS URL Rewrite Module). PowerShell script must be run as Administrator. System Requirements PowerShell 3 or later IIS 7.5 and later Exchange 2013, 2016, or 2019 Windows Server 2008 R2, Server 2012, Server 2012 R2, Server 2016, Server 2019 +New If Operating System is older than Windows Server 2016, must have KB2999226 for IIS Rewrite Module 2.1 to work. Who should run the Exchange On-premises Mitigation Tool Situation Guidance If you have done nothing to date to patch or mitigate this issue\u2026 Run EOMT.PS1 as soon as possible.This will both attempt to remediate as well as mitigate your servers against further attacks. Once complete, follow patching guidance to update your servers on http://aka.ms/exchangevulns If you have mitigated using any/all of the mitigation guidance Microsoft has given (Exchangemitigations.Ps1, Blog post, etc..) Run EOMT.PS1 as soon as possible. This will both attempt to remediate as well as mitigate your servers against further attacks. Once complete, follow patching guidance to update your servers on http://aka.ms/exchangevulns If you have already patched your systems and are protected, but did NOT investigate for any adversary activity, indicators of compromise, etc\u2026. Run EOMT.PS1 as soon as possible. This will attempt to remediate any existing compromise that may not have been full remediated before patching. If you have already patched and investigated your systems for any indicators of compromise, etc\u2026. No action is required Important note regarding Microsoft Safety Scanner The Exchange On-premises Mitigation Tool runs the Microsoft Safety Scanner in a quick scan mode. If you suspect any compromise, we highly recommend you run it in the FULL SCAN mode. FULL SCAN mode can take a long time but if you are not running Microsoft Defender AV as your default AV, FULL SCAN will be required to remediate threats. Exchange On-premises Mitigation Tool Examples The default recommended way of using EOMT.ps1. This will determine if your server is vulnerable, mitigate if vulnerable, and run MSERT in quick scan mode. If the server is not vulnerable only MSERT quick scan will run. .\\EOMT.ps1 To run a Full MSERT Scan - We only recommend this option only if the initial quick scan discovered threats. The full scan may take hours or days to complete. .\\EOMT.ps1 -RunFullScan -DoNotRunMitigation To run the Exchange On-premises Mitigation Tool with MSERT in detect only mode - MSERT will not remediate detected threats. .\\EOMT.ps1 -DoNotRemediate To roll back the Exchange On-premises Mitigation Tool mitigations .\\EOMT.ps1 -Rollbackmitigation Note: If ExchangeMitigations.ps1 was used previously to apply mitigations, Use ExchangeMitigations.ps1 for rollback. +NEW EOMT will now autoupdate by downloading the latest version from GitHub. To prevent EOMT from fetching updates to EOMT.ps1 from the internet. .\\EOMT.ps1 -DoNotAutoUpdateEOMT Exchange On-premises Mitigation Tool Q & A Question : What mode should I run EOMT.ps1 in by default? Answer : By default, EOMT.ps1 should be run without any parameters: This will run the default mode which does the following: 1. Checks if your server is vulnerable based on the presence of the SU patch or Exchange version. 2. Downloads and installs the IIS URL rewrite tool (only if vulnerable) . 3. Applies the URL rewrite mitigation (only if vulnerable) . 4. Runs the Microsoft Safety Scanner in \"Quick Scan\" mode (vulnerable or not) . Question : What if I run a full scan and it\u2019s affecting the resources of my servers? Answer : You can terminate the process of the scan by running the following command in an Administrative PowerShell session. Stop-Process -Name msert Question : What is the real difference between this script (EOMT.PS1) and the previous script Microsoft released (ExchangeMitigations.Ps1). Answer : The Exchange On-premises Mitigation Tool was released to help pull together multiple mitigation and response steps, whereas the previous script simply enabled mitigations. Some details on what each do: EOMT.PS1 Mitigation of CVE-2021-26855 via a URL Rewrite configuration. Mitigation does not impact Exchange functionality. Malware scan of the Exchange Server via the Microsoft Safety Scanner Attempt to reverse any changes made by identified threats. ExchangeMitigations.ps1: Does mitigations for all 4 CVE\u2019s - CVE-2021-26855, CVE-2021-26857, CVE-2021-27065 & CVE-2021-26858. Some of the mitigation methods impact Exchange functionality. Does not do any scanning for existing compromise or exploitation. Does not take response actions to existing active identified threats. Question: What if I do not have an external internet connection from my Exchange server? Answer: If you do not have an external internet connection, you can still use the legacy script (ExchangeMitigations.ps1) and other steps from the mitigation blog post: Microsoft Exchange Server Vulnerabilities Mitigations \u2013 March 2021 Question: If I have already ran the mitigations previously, will the Exchange On-premises Mitigation Tool roll back any of the mitigations? Answer: No, please use the legacy script (ExchangeMitigations.ps1) to do rollback. The legacy script supports rollback for the mitigations the Exchange On-premises Mitigation Tool applied.","title":"EOMT"},{"location":"Security/EOMT/#exchange-on-premises-mitigation-tool-eomt","text":"Download the latest release: EOMT.ps1 This script contains mitigations to help address the following vulnerabilities. CVE-2021-26855 This is the most effective way to help quickly protect and mitigate your Exchange Servers prior to patching. We recommend this script over the previous ExchangeMitigations.ps1 script. The Exchange On-premises Mitigation Tool automatically downloads any dependencies and runs the Microsoft Safety Scanner. This a better approach for Exchange deployments with Internet access and for those who want an attempt at automated remediation. We have not observed any impact to Exchange Server functionality via these mitigation methods. EOMT.ps1 is completely automated and uses familiar mitigation methods previously documented. This script has four operations it performs: +NEW Check for the latest version of EOMT and download it. Mitigate against current known attacks using CVE-2021-26855 via a URL Rewrite configuration Scan the Exchange Server using the Microsoft Safety Scanner Attempt to remediate compromises detected by the Microsoft Safety Scanner. This a better approach for Exchange deployments with Internet access and for those who want an attempt at automated remediation. We have not observed any impact to Exchange Server functionality via these mitigation methods nor do these mitigation methods make any direct changes that disable features of Exchange. Use of the Exchange On-premises Mitigation Tool and the Microsoft Saftey Scanner are subject to the terms of the Microsoft Privacy Statement: https://aka.ms/privacy","title":"Exchange On-premises Mitigation Tool (EOMT)"},{"location":"Security/EOMT/#requirements-to-run-the-exchange-on-premises-mitigation-tool","text":"External Internet Connection from your Exchange server (required to download the Microsoft Safety Scanner and the IIS URL Rewrite Module). PowerShell script must be run as Administrator.","title":"Requirements to run the Exchange On-premises Mitigation Tool"},{"location":"Security/EOMT/#system-requirements","text":"PowerShell 3 or later IIS 7.5 and later Exchange 2013, 2016, or 2019 Windows Server 2008 R2, Server 2012, Server 2012 R2, Server 2016, Server 2019 +New If Operating System is older than Windows Server 2016, must have KB2999226 for IIS Rewrite Module 2.1 to work.","title":"System Requirements"},{"location":"Security/EOMT/#who-should-run-the-exchange-on-premises-mitigation-tool","text":"Situation Guidance If you have done nothing to date to patch or mitigate this issue\u2026 Run EOMT.PS1 as soon as possible.This will both attempt to remediate as well as mitigate your servers against further attacks. Once complete, follow patching guidance to update your servers on http://aka.ms/exchangevulns If you have mitigated using any/all of the mitigation guidance Microsoft has given (Exchangemitigations.Ps1, Blog post, etc..) Run EOMT.PS1 as soon as possible. This will both attempt to remediate as well as mitigate your servers against further attacks. Once complete, follow patching guidance to update your servers on http://aka.ms/exchangevulns If you have already patched your systems and are protected, but did NOT investigate for any adversary activity, indicators of compromise, etc\u2026. Run EOMT.PS1 as soon as possible. This will attempt to remediate any existing compromise that may not have been full remediated before patching. If you have already patched and investigated your systems for any indicators of compromise, etc\u2026. No action is required","title":"Who should run the Exchange On-premises Mitigation Tool"},{"location":"Security/EOMT/#important-note-regarding-microsoft-safety-scanner","text":"The Exchange On-premises Mitigation Tool runs the Microsoft Safety Scanner in a quick scan mode. If you suspect any compromise, we highly recommend you run it in the FULL SCAN mode. FULL SCAN mode can take a long time but if you are not running Microsoft Defender AV as your default AV, FULL SCAN will be required to remediate threats.","title":"Important note regarding Microsoft Safety Scanner"},{"location":"Security/EOMT/#exchange-on-premises-mitigation-tool-examples","text":"The default recommended way of using EOMT.ps1. This will determine if your server is vulnerable, mitigate if vulnerable, and run MSERT in quick scan mode. If the server is not vulnerable only MSERT quick scan will run. .\\EOMT.ps1 To run a Full MSERT Scan - We only recommend this option only if the initial quick scan discovered threats. The full scan may take hours or days to complete. .\\EOMT.ps1 -RunFullScan -DoNotRunMitigation To run the Exchange On-premises Mitigation Tool with MSERT in detect only mode - MSERT will not remediate detected threats. .\\EOMT.ps1 -DoNotRemediate To roll back the Exchange On-premises Mitigation Tool mitigations .\\EOMT.ps1 -Rollbackmitigation Note: If ExchangeMitigations.ps1 was used previously to apply mitigations, Use ExchangeMitigations.ps1 for rollback. +NEW EOMT will now autoupdate by downloading the latest version from GitHub. To prevent EOMT from fetching updates to EOMT.ps1 from the internet. .\\EOMT.ps1 -DoNotAutoUpdateEOMT","title":"Exchange On-premises Mitigation Tool Examples"},{"location":"Security/EOMT/#exchange-on-premises-mitigation-tool-q-a","text":"Question : What mode should I run EOMT.ps1 in by default? Answer : By default, EOMT.ps1 should be run without any parameters: This will run the default mode which does the following: 1. Checks if your server is vulnerable based on the presence of the SU patch or Exchange version. 2. Downloads and installs the IIS URL rewrite tool (only if vulnerable) . 3. Applies the URL rewrite mitigation (only if vulnerable) . 4. Runs the Microsoft Safety Scanner in \"Quick Scan\" mode (vulnerable or not) . Question : What if I run a full scan and it\u2019s affecting the resources of my servers? Answer : You can terminate the process of the scan by running the following command in an Administrative PowerShell session. Stop-Process -Name msert Question : What is the real difference between this script (EOMT.PS1) and the previous script Microsoft released (ExchangeMitigations.Ps1). Answer : The Exchange On-premises Mitigation Tool was released to help pull together multiple mitigation and response steps, whereas the previous script simply enabled mitigations. Some details on what each do:","title":"Exchange On-premises Mitigation Tool Q &amp; A"},{"location":"Security/EOMT/#eomtps1","text":"Mitigation of CVE-2021-26855 via a URL Rewrite configuration. Mitigation does not impact Exchange functionality. Malware scan of the Exchange Server via the Microsoft Safety Scanner Attempt to reverse any changes made by identified threats.","title":"EOMT.PS1"},{"location":"Security/EOMT/#exchangemitigationsps1","text":"Does mitigations for all 4 CVE\u2019s - CVE-2021-26855, CVE-2021-26857, CVE-2021-27065 & CVE-2021-26858. Some of the mitigation methods impact Exchange functionality. Does not do any scanning for existing compromise or exploitation. Does not take response actions to existing active identified threats. Question: What if I do not have an external internet connection from my Exchange server? Answer: If you do not have an external internet connection, you can still use the legacy script (ExchangeMitigations.ps1) and other steps from the mitigation blog post: Microsoft Exchange Server Vulnerabilities Mitigations \u2013 March 2021 Question: If I have already ran the mitigations previously, will the Exchange On-premises Mitigation Tool roll back any of the mitigations? Answer: No, please use the legacy script (ExchangeMitigations.ps1) to do rollback. The legacy script supports rollback for the mitigations the Exchange On-premises Mitigation Tool applied.","title":"ExchangeMitigations.ps1:"},{"location":"Security/ExchangeMitigations/","text":"ExchangeMitigations Download the latest release: ExchangeMitigations.ps1 This script contains 4 mitigations to help address the following vulnerabilities: CVE-2021-26855 CVE-2021-26857 CVE-2021-27065 CVE-2021-26858 For more information on each mitigation please visit https://aka.ms/exchangevulns This should only be used as a temporary mitigation until your Exchange Servers can be fully patched, recommended guidance is to apply all of the mitigations at once. For this script to work you must have the IIS URL Rewrite Module installed which can be done via this script using the -FullPathToMSI parameter. For IIS 10 and higher URL Rewrite Module 2.1 must be installed, you can download version 2.1 here: x86 & x64 -https://www.iis.net/downloads/microsoft/url-rewrite For IIS 8.5 and lower Rewrite Module 2.0 must be installed, you can download version 2.0 here: x86 - https://www.microsoft.com/en-us/download/details.aspx?id=5747 x64 - https://www.microsoft.com/en-us/download/details.aspx?id=7435 Installing URL Rewrite version 2.1 on IIS versions 8.5 and lower may cause IIS and Exchange to become unstable. If there is a mismatch between the URL Rewrite module and IIS version, ExchangeMitigations.ps1 will not apply the mitigation for CVE-2021-26855. You must uninstall the URL Rewrite module and reinstall the correct version. Script requires PowerShell 3.0 and later and must be executed from an elevated PowerShell Session. Download the latest release here: Download ExchangeMitigations.ps1 To apply all mitigations with MSI install .\\ExchangeMitigations.ps1 -FullPathToMSI \"FullPathToMSI\" -WebSiteNames \"Default Web Site\" -ApplyAllMitigations To apply all mitigations without MSI install .\\ExchangeMitigations.ps1 -WebSiteNames \"Default Web Site\" -ApplyAllMitigations -Verbose To rollback all mitigations .\\ExchangeMitigations.ps1 -WebSiteNames \"Default Web Site\" -RollbackAllMitigation To apply multiple or specific mitigations (out of the 4) .\\ExchangeMitigations.ps1 -WebSiteNames \"Default Web Site\" -ApplyECPAppPoolMitigation -ApplyOABAppPoolMitigation To rollback multiple or specific mitigations .\\ExchangeMitigations.ps1 -WebSiteNames \"Default Web Site\" -RollbackECPAppPoolMitigation -RollbackOABAppPoolMitigation","title":"ExchangeMitigations"},{"location":"Security/ExchangeMitigations/#exchangemitigations","text":"Download the latest release: ExchangeMitigations.ps1 This script contains 4 mitigations to help address the following vulnerabilities: CVE-2021-26855 CVE-2021-26857 CVE-2021-27065 CVE-2021-26858 For more information on each mitigation please visit https://aka.ms/exchangevulns This should only be used as a temporary mitigation until your Exchange Servers can be fully patched, recommended guidance is to apply all of the mitigations at once. For this script to work you must have the IIS URL Rewrite Module installed which can be done via this script using the -FullPathToMSI parameter. For IIS 10 and higher URL Rewrite Module 2.1 must be installed, you can download version 2.1 here: x86 & x64 -https://www.iis.net/downloads/microsoft/url-rewrite For IIS 8.5 and lower Rewrite Module 2.0 must be installed, you can download version 2.0 here: x86 - https://www.microsoft.com/en-us/download/details.aspx?id=5747 x64 - https://www.microsoft.com/en-us/download/details.aspx?id=7435 Installing URL Rewrite version 2.1 on IIS versions 8.5 and lower may cause IIS and Exchange to become unstable. If there is a mismatch between the URL Rewrite module and IIS version, ExchangeMitigations.ps1 will not apply the mitigation for CVE-2021-26855. You must uninstall the URL Rewrite module and reinstall the correct version. Script requires PowerShell 3.0 and later and must be executed from an elevated PowerShell Session. Download the latest release here: Download ExchangeMitigations.ps1 To apply all mitigations with MSI install .\\ExchangeMitigations.ps1 -FullPathToMSI \"FullPathToMSI\" -WebSiteNames \"Default Web Site\" -ApplyAllMitigations To apply all mitigations without MSI install .\\ExchangeMitigations.ps1 -WebSiteNames \"Default Web Site\" -ApplyAllMitigations -Verbose To rollback all mitigations .\\ExchangeMitigations.ps1 -WebSiteNames \"Default Web Site\" -RollbackAllMitigation To apply multiple or specific mitigations (out of the 4) .\\ExchangeMitigations.ps1 -WebSiteNames \"Default Web Site\" -ApplyECPAppPoolMitigation -ApplyOABAppPoolMitigation To rollback multiple or specific mitigations .\\ExchangeMitigations.ps1 -WebSiteNames \"Default Web Site\" -RollbackECPAppPoolMitigation -RollbackOABAppPoolMitigation","title":"ExchangeMitigations"},{"location":"Security/Test-CVE-2021-34470/","text":"Test-CVE-2021-34470 Download the latest release: Test-CVE-2021-34470.ps1 Environments running supported versions of Exchange Server should address CVE-2021-34470 by applying the CU and/or SU for the respective versions of Exchange, as described in Released: July 2021 Exchange Server Security Updates . Environments where the latest version of Exchange Server is any version before Exchange 2013, or environments where all Exchange servers have been removed, can use this script to address the vulnerability. Examples Check for the vulnerability: .\\Test-CVE-2021-34470.ps1 Fix the vulnerability if found: .\\Test-CVE-2021-34470.ps1 -ApplyFix Note that the user must be a Schema Admin to use the -ApplyFix switch.","title":"Test-CVE-2021-34470"},{"location":"Security/Test-CVE-2021-34470/#test-cve-2021-34470","text":"Download the latest release: Test-CVE-2021-34470.ps1 Environments running supported versions of Exchange Server should address CVE-2021-34470 by applying the CU and/or SU for the respective versions of Exchange, as described in Released: July 2021 Exchange Server Security Updates . Environments where the latest version of Exchange Server is any version before Exchange 2013, or environments where all Exchange servers have been removed, can use this script to address the vulnerability.","title":"Test-CVE-2021-34470"},{"location":"Security/Test-CVE-2021-34470/#examples","text":"Check for the vulnerability: .\\Test-CVE-2021-34470.ps1 Fix the vulnerability if found: .\\Test-CVE-2021-34470.ps1 -ApplyFix Note that the user must be a Schema Admin to use the -ApplyFix switch.","title":"Examples"},{"location":"Security/Test-ProxyLogon/","text":"Test-ProxyLogon.ps1 Download the latest release: Test-ProxyLogon.ps1 Formerly known as Test-Hafnium, this script automates all four of the commands found in the Hafnium blog post . It also has a progress bar and some performance tweaks to make the CVE-2021-26855 test run much faster. Usage The most typical usage of this script is to check all Exchange servers and save the reports, by using the following syntax from Exchange Management Shell: Get-ExchangeServer | .\\Test-ProxyLogon.ps1 -OutPath $home\\desktop\\logs To check the local server only, just run the script: .\\Test-ProxyLogon.ps1 -OutPath $home\\desktop\\logs To check the local server and copy the identified logs and files to the OutPath: .\\Test-ProxyLogon.ps1 -OutPath $home\\desktop\\logs -CollectFiles To display the results without saving them, pass -DisplayOnly: .\\Test-ProxyLogon.ps1 -DisplayOnly Frequently Asked Questions The script says it found suspicious files, and it lists a bunch of zip files. What does this mean? The script will flag any zip/7x/rar files that it finds in ProgramData. As noted in this blog post , web shells have been observed using such files for exfiltration. An administrator should review the files to determine if they are valid. Determining if a zip file is a valid part of an installed product is outside the scope of this script, and whitelisting files by name would only encourage the use of those specific names by attackers. I'm having trouble running the script on Exchange 2010. If PowerShell 3 is present, the script can be run on Exchange 2010. It will not run-on PowerShell 2. One can also enable PS Remoting and run the script remotely against Exchange 2010. However, the script has minimal functionality in these scenarios, as Exchange 2010 is only affected by one of the four announced exploits - CVE-2021-26857. Further, this exploit is only available if the Unified Messaging role is present. As a result, it is often easier to simply run the Get-EventLog command from the blog post , rather than using Test-ProxyLogon.","title":"Test-ProxyLogon"},{"location":"Security/Test-ProxyLogon/#test-proxylogonps1","text":"Download the latest release: Test-ProxyLogon.ps1 Formerly known as Test-Hafnium, this script automates all four of the commands found in the Hafnium blog post . It also has a progress bar and some performance tweaks to make the CVE-2021-26855 test run much faster.","title":"Test-ProxyLogon.ps1"},{"location":"Security/Test-ProxyLogon/#usage","text":"The most typical usage of this script is to check all Exchange servers and save the reports, by using the following syntax from Exchange Management Shell: Get-ExchangeServer | .\\Test-ProxyLogon.ps1 -OutPath $home\\desktop\\logs To check the local server only, just run the script: .\\Test-ProxyLogon.ps1 -OutPath $home\\desktop\\logs To check the local server and copy the identified logs and files to the OutPath: .\\Test-ProxyLogon.ps1 -OutPath $home\\desktop\\logs -CollectFiles To display the results without saving them, pass -DisplayOnly: .\\Test-ProxyLogon.ps1 -DisplayOnly","title":"Usage"},{"location":"Security/Test-ProxyLogon/#frequently-asked-questions","text":"The script says it found suspicious files, and it lists a bunch of zip files. What does this mean? The script will flag any zip/7x/rar files that it finds in ProgramData. As noted in this blog post , web shells have been observed using such files for exfiltration. An administrator should review the files to determine if they are valid. Determining if a zip file is a valid part of an installed product is outside the scope of this script, and whitelisting files by name would only encourage the use of those specific names by attackers. I'm having trouble running the script on Exchange 2010. If PowerShell 3 is present, the script can be run on Exchange 2010. It will not run-on PowerShell 2. One can also enable PS Remoting and run the script remotely against Exchange 2010. However, the script has minimal functionality in these scenarios, as Exchange 2010 is only affected by one of the four announced exploits - CVE-2021-26857. Further, this exploit is only available if the Unified Messaging role is present. As a result, it is often easier to simply run the Get-EventLog command from the blog post , rather than using Test-ProxyLogon.","title":"Frequently Asked Questions"},{"location":"Setup/CopyMissingDlls/","text":"CopyMissingDlls Download the latest release: CopyMissingDlls.ps1 This script is used to copy over missing dlls that might have occurred during a CU install. This script has a mapping of the location of where the .dll should be on the server and where it should be on the ISO and will attempt to copy it over if the file is detected to be missing on the install location. Parameter Type Description IsoRoot string The Root location of the ISO. Example: D:","title":"CopyMissingDlls"},{"location":"Setup/CopyMissingDlls/#copymissingdlls","text":"Download the latest release: CopyMissingDlls.ps1 This script is used to copy over missing dlls that might have occurred during a CU install. This script has a mapping of the location of where the .dll should be on the server and where it should be on the ISO and will attempt to copy it over if the file is detected to be missing on the install location. Parameter Type Description IsoRoot string The Root location of the ISO. Example: D:","title":"CopyMissingDlls"},{"location":"Setup/FixInstallerCache/","text":"FixInstallerCache Download the latest release: FixInstallerCache.ps1 This script is used to copy over the missing MSI files from the installer cache. Parameter Type Description CurrentCuRootDirectory string The root location of the current CU that you are on. MachineName string array One or more machine names from which to copy the required MSI files.","title":"FixInstallerCache"},{"location":"Setup/FixInstallerCache/#fixinstallercache","text":"Download the latest release: FixInstallerCache.ps1 This script is used to copy over the missing MSI files from the installer cache. Parameter Type Description CurrentCuRootDirectory string The root location of the current CU that you are on. MachineName string array One or more machine names from which to copy the required MSI files.","title":"FixInstallerCache"},{"location":"Setup/SetupLogReviewer/","text":"SetupLogReviewer Download the latest release: SetupLogReviewer.ps1 This script is meant to be run against the Exchange Setup Logs located at C:\\ExchangeSetupLogs\\ExchangeSetup.log . You can run this on the server, or on a personal computer. It currently checks for common prerequisite issues, clearly calling out if you need up run /PrepareAD in your environment and calls out where it needs to be run. It also checks for some other common issue that we have seen in support that we call out and display the actions to the screen. Parameter Description [string]SetupLog The location of the Exchange Setup Log that needs to be reviewed [switch]DelegatedSetup Use this switch if you are troubleshooting Prerequisites of a Delegated Setup issue","title":"SetupLogReviewer"},{"location":"Setup/SetupLogReviewer/#setuplogreviewer","text":"Download the latest release: SetupLogReviewer.ps1 This script is meant to be run against the Exchange Setup Logs located at C:\\ExchangeSetupLogs\\ExchangeSetup.log . You can run this on the server, or on a personal computer. It currently checks for common prerequisite issues, clearly calling out if you need up run /PrepareAD in your environment and calls out where it needs to be run. It also checks for some other common issue that we have seen in support that we call out and display the actions to the screen. Parameter Description [string]SetupLog The location of the Exchange Setup Log that needs to be reviewed [switch]DelegatedSetup Use this switch if you are troubleshooting Prerequisites of a Delegated Setup issue","title":"SetupLogReviewer"},{"location":"Setup/SetupAssist/","text":"SetupAssist Download the latest release: SetupAssist.ps1 This script is meant to be run on the system where you are running setup from. It currently checks and displays the following when just running it: Current Logged on User and SID Are you running as an Administrator Member of Domain Admins Member of Schema Admins Member of Enterprise Admins Member of Organization Management Current PowerShell Execution Policy setting Checks to see if you are missing files in the installer cache (only checks to see if they are there, not if they are valid) More than 1 powershell.exe process up and running If reboot pending. (Add -Verbose to see where) The current AD level of readiness for CU upgrading. Displays warnings if a mismatch is detected. Additional Parameters are used for when they are called out from the SetupLogReviewer.ps1 Parameter Type Description OtherWellKnownObjects switch Tests for deleted objects in the otherWellKnownObjects attribute","title":"SetupAssist"},{"location":"Setup/SetupAssist/#setupassist","text":"Download the latest release: SetupAssist.ps1 This script is meant to be run on the system where you are running setup from. It currently checks and displays the following when just running it: Current Logged on User and SID Are you running as an Administrator Member of Domain Admins Member of Schema Admins Member of Enterprise Admins Member of Organization Management Current PowerShell Execution Policy setting Checks to see if you are missing files in the installer cache (only checks to see if they are there, not if they are valid) More than 1 powershell.exe process up and running If reboot pending. (Add -Verbose to see where) The current AD level of readiness for CU upgrading. Displays warnings if a mismatch is detected. Additional Parameters are used for when they are called out from the SetupLogReviewer.ps1 Parameter Type Description OtherWellKnownObjects switch Tests for deleted objects in the otherWellKnownObjects attribute","title":"SetupAssist"},{"location":"Setup/SetupAssist/ComputersContainer/","text":"Computers container renamed or missing When the CN=Computers container has been renamed or removed from the root of an Active Directory domain, /PrepareAD will fail for certain Cumulative Updates. Please see https://support.microsoft.com/help/5005319 for details.","title":"ComputersContainer"},{"location":"Setup/SetupAssist/ComputersContainer/#computers-container-renamed-or-missing","text":"When the CN=Computers container has been renamed or removed from the root of an Active Directory domain, /PrepareAD will fail for certain Cumulative Updates. Please see https://support.microsoft.com/help/5005319 for details.","title":"Computers container renamed or missing"},{"location":"Setup/SetupAssist/ReadOnlyDomainControllerContainer/","text":"Read Only Domain Controller - Domain Controllers OU A Read Only Domain Controller appears to be in the container other than CN=Domain Controllers. This will cause setup to fail if we attempt to domain prep that domain. The path to the RODC must be CN=DCName,CN=Domain Controllers....","title":"ReadOnlyDomainControllerContainer"},{"location":"Setup/SetupAssist/ReadOnlyDomainControllerContainer/#read-only-domain-controller-domain-controllers-ou","text":"A Read Only Domain Controller appears to be in the container other than CN=Domain Controllers. This will cause setup to fail if we attempt to domain prep that domain. The path to the RODC must be CN=DCName,CN=Domain Controllers....","title":"Read Only Domain Controller - Domain Controllers OU"},{"location":"Setup/SetupAssist/RebootPending/","text":"Reboot Pending It is best to reboot the server to address these issues. It may take some time after a reboot to have the keys automatically removed. However, if they don't remove automatically, follow these steps to address the issue for the keys that were provided to be a problem. Open regedit to the desired location. Delete the key. If unable to delete the key, follow these steps: Right click on it Open permissions Click on Advanced Change ownership to your account Close Advanced window Give your account Full Control in Permissions window Delete the key NOTE: With Component Based Servicing\\RebootPending you need to do the same for Component Based Servicing\\PackagesPending prior to RebootPending NOTE: Follow the steps in this section carefully. Serious problems might occur if you modify the registry incorrectly. Before you modify it, back up the registry for restoration in case problems occur.","title":"RebootPending"},{"location":"Setup/SetupAssist/RebootPending/#reboot-pending","text":"It is best to reboot the server to address these issues. It may take some time after a reboot to have the keys automatically removed. However, if they don't remove automatically, follow these steps to address the issue for the keys that were provided to be a problem. Open regedit to the desired location. Delete the key. If unable to delete the key, follow these steps: Right click on it Open permissions Click on Advanced Change ownership to your account Close Advanced window Give your account Full Control in Permissions window Delete the key NOTE: With Component Based Servicing\\RebootPending you need to do the same for Component Based Servicing\\PackagesPending prior to RebootPending NOTE: Follow the steps in this section carefully. Serious problems might occur if you modify the registry incorrectly. Before you modify it, back up the registry for restoration in case problems occur.","title":"Reboot Pending"}]}